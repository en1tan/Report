---
openapi: 3.0.0
info:
  version: 1.0.0
  title: SorosokeAPI Server
  description: API Server for SorosokeAPI
servers:
  - url: https://sorosokeapi.onrender.com/api/v1
    description: Production Server
  - url: http://localhost:5000/api/v1
    description: Local Server
paths:
  "/user/signup":
    post:
      summary: Register new user
      tags:
        - User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PublicUser"
            example:
              firstName: Soroke
              middleName: ''
              lastName: User
              userName: sorosoke
              email: user@sorosoke.com
              phoneNumber: '08012345678'
              gender: Female
              address: 1, Sorosoke Av.
              addressLandmark: ''
              password: sorosokeWere@1
              userAgeGroup: 20-90
              lga: ''
              state: ''
              country: ''
              avatar: ''
              disabilityStatus: ''
              religion: ''
      responses:
        '201':
          description: user created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PublicUser"
              example:
                message: User successfully created
                status: success
                data:
                  onlineStatus: offline
                  active: true
                  _id: 60b008fa9c946258111c7271
                  firstName: Soroke
                  lastName: User
                  userName: sorosoke
                  email: user1@sorosoke.com
                  phoneNumber: '08012345678'
                  password: 'null'
                  gender: Female
                  address: 1, Sorosoke Av.
                  userAgeGroup: 20-90
                  userID: 9044502255
                  createdAt: '2021-05-27T21:02:50.182Z'
                  updatedAt: '2021-05-27T21:02:50.182Z'
                  __v: 0
  "/user/login":
    post:
      summary: Login user
      tags:
        - User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userName:
                  type: string
                password:
                  type: string
                  format: password
              example:
                userName: sorosoke
                password: sorosokeWere@1
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        "$ref": "#/components/schemas/PublicUser"
                example:
                  message: User Authorized
                  status: success
                  data:
                    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjAwOGZhOWM5NDYyNTgxMTFjNzI3MSIsImlhdCI6MTYyMjE1MDk5NSwiZXhwIjoxNjIyMjM3Mzk1fQ.d488_F5G7Bc--nbcBKnk7AcCHb0iesYxXhaMN8gZ6ZY
                    user:
                      onlineStatus: online
                      active: true
                      _id: 60b008fa9c946258111c7271
                      firstName: Soroke
                      lastName: User
                      userName: sorosoke
                      email: user1@sorosoke.com
                      phoneNumber: '08012345678'
                      gender: Female
                      address: 1, Sorosoke Av.
                      userAgeGroup: 20-90
                      userID: '9044502255'
                      createdAt: '2021-05-27T21:02:50.182Z'
                      updatedAt: '2021-05-27T21:29:27.976Z'
                      __v: 0
  "/user/profile":
    get:
      security:
        - bearerAuth: []
      summary: User profile
      tags:
        - User
      description: ''
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PublicUser"
                example:
                  message: User details
                  status: success
                  data:
                    onlineStatus: online
                    active: true
                    _id: 60b008fa9c946258111c7271
                    firstName: Soroke
                    lastName: User
                    userName: sorosoke
                    email: user1@sorosoke.com
                    phoneNumber: '08012345678'
                    gender: Female
                    address: 1, Sorosoke Av.
                    userAgeGroup: 20-90
                    userID: '9044502255'
                    createdAt: '2021-05-27T21:02:50.182Z'
                    updatedAt: '2021-05-27T21:29:27.976Z'
                    __v: 0
  "/user/account":
    patch:
      security:
        - bearerAuth: []
      summary: Update user details
      tags:
        - User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PublicUser"
            example:
              firstName: string
              lastName: string
              middleName: string
              email: user@example.com
              phoneNumber: string
              userAgeGroup: string
              gender: Male
              address: string
              addressLandmark: string
              lga: string
              state: string
              country: string
              avatar: string
              disabilityStatus: string
              religion: string
      responses:
        '200':
          description: Updated user details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PublicUser"
                example:
                  firstName: Soroke
                  lastName: User
                  userName: sorosoke
                  email: user@sorosoke.com
                  phoneNumber: '08012345678'
                  gender: Female
                  address: 1, Sorosoke Av.
                  password: sorosokeWere@1
                  confirmPassword: sorosokeWere@1
                  userAgeGroup: 20-90
  /user/requestPasswordReset:
    post:
      summary: request password reset
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        200:
          description: password request sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Passsword Reset Link Sent Successfully
        404:
          description: acount not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Account Does Not Exist
  /user/sendOtp:
    post:
      summary: send otp to user phone number
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        200:
          description: otp sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Otp Sent To Your Phone Number. Please Be Patient, The Message May Take A Few Minutes
  /user/verifyOtp:
    post:
      summary: verify otp sent to user phone number
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                otp:
                  type: number
                  example: 595675
      responses:
        200:
          description: otp verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Otp Verified Successfully
  /user/resetPassword:
    post:
      summary: reset user password
      tags:
        - User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: nov039jus98fdhvcwe98fh3433433
                token:
                  type: string
                  example: 98e3b398hbf92832932n29832903h929382n9v8h9rn29rnv938h299nr9283hv92hr93nbv2938hr9vn938hv92rn93283h9232...
                password:
                  type: string
                  format: password
                  example: ogbongePassword4@ver
      responses:
        200:
          description: password reset sucessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Password Reset Successfully
  "/partner/{id}/users":
    get:
      summary: Get all partner users
      description: Returns all users of a partner organization
      tags:
        - Partner Organization
      security:
        - bearerAuth: []
      parameters:
        - description: The partner organization id
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b01f6b669e34779cd05ab5
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      staffs:
                        type: array
                        items:
                          "$ref": "#/components/schemas/PartnerUser"
                      total:
                        type: integer
                      page:
                        type: integer
              example:
                status: success
                message: all partner users
                data:
                  staffs:
                    _id: 60b190ea4cf0765bb8369faa
                    firstName: Verifier
                    lastName: Sorosoke
                    gender: Male
                    email: verifier@sorosoke.com
                    phoneNumber: '07032165498'
                    userType: verifier
                    address: 12, Verifier Ar.
                    stateOfAssignment: Abuja
                    active: true
                    userID: yXp5efQVTF
                    __v: 0
                  total: 1
                  page: 1
  "/partner/user/{id}/update":
    patch:
      security:
        - bearerAuth: []
      summary: Update partner user details
      tags:
        - Partner Organization
      description: userTypes:['admin']
      parameters:
        - description: partner user id
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b190ea4cf0765bb8369faa
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerUser"
            example:
              userType: verifier
              stateOfAssignment: ''
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerUser"
              example:
                status: success
                message: partner user updated succesfully
                data:
                  _id: 60b190ea4cf0765bb8369faa
                  partnerID: 60b01f6b669e34779cd05ab5
                  firstName: Verifier
                  lastName: Sorosoke
                  userName: verifier
                  gender: Male
                  email: verifier@sorosoke.com
                  phoneNumber: '07032165498'
                  userType: verifier
                  address: 12, Verifier Ar.
                  stateOfAssignment: Abuja
                  password: verifierWere@2
                  onlineStatus: online
                  active: true
                  userID: yXp5efQVTF
                  createdAt: '2021-05-29T00:55:06.510Z'
                  updatedAt: '2021-05-29T00:55:06.510Z'
                  __v: 0
  "/partner/user/{id}":
    delete:
      security:
        - bearerAuth: []
      summary: delete partner user
      description: 'userTypes: [super-admin,admin]'
      tags:
        - Partner Organization
        - Super Admin
      parameters:
        - description: partner user id
          in: path
          required: true
          name: id
          schema:
            type: string
          example: 60b190ea4cf0765bb8369faa
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: partner user deleted succesfully
  "/partner/signup":
    post:
      summary: Add partner account
      tags:
        - Partner User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerUser"
            example:
              partnerID: 60b01f6b669e34779cd05ab5
              firstName: Verifier
              lastName: Sorosoke
              userName: verifier
              gender: Male
              email: verifier@sorosoke.com
              phoneNumber: '07032165498'
              userType: verifier
              address: 12, Verifier Ar.
              stateOfAssignment: Abuja
              password: verifierWere@2
              confirmPassword: verifierWere@2
      responses:
        '201':
          description: Partner user added
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        "$ref": "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user succesfully created
                data:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI...
                  user:
                    _id: 60b190ea4cf0765bb8369faa
                    partnerID: 60b01f6b669e34779cd05ab5
                    firstName: Verifier
                    lastName: Sorosoke
                    userName: verifier
                    gender: Male
                    email: verifier@sorosoke.com
                    phoneNumber: '07032165498'
                    userType: verifier
                    address: 12, Verifier Ar.
                    stateOfAssignment: Abuja
                    password: verifierWere@2
                    onlineStatus: offline
                    active: true
                    userID: yXp5efQVTF
                    createdAt: '2021-05-29T00:55:06.510Z'
                    updatedAt: '2021-05-29T00:55:06.510Z'
                    __v: 0
  "/partner/login":
    post:
      summary: Login partner user
      tags:
        - Partner User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userName:
                  type: string
                password:
                  type: string
                  format: password
            examples:
              superadmin:
                summary: superadmin login
                value:
                  userName: superadmin
                  password: superadminWere@2
              admin:
                summary: admin login
                value:
                  userName: admin
                  password: adminWere@2
              staff:
                summary: staff login
                value:
                  userName: staff
                  password: staffWere@2
              verifier:
                summary: verifier login
                value:
                  userName: verifier
                  password: verifierWere@2
      responses:
        '200':
          description: User authorized
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        "$ref": "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user authorized
                data:
                  token: eyJhbGciOiJIUzI1NiIsInR5cCI...
                  user:
                    _id: 60b190ea4cf0765bb8369faa
                    partnerID: 60b01f6b669e34779cd05ab5
                    firstName: Verifier
                    lastName: Sorosoke
                    userName: verifier
                    gender: Male
                    email: verifier@sorosoke.com
                    phoneNumber: '07032165498'
                    userType: verifier
                    address: 12, Verifier Ar.
                    stateOfAssignment: Abuja
                    password: verifierWere@2
                    onlineStatus: online
                    active: true
                    userID: yXp5efQVTF
                    createdAt: '2021-05-29T00:55:06.510Z'
                    updatedAt: '2021-05-29T00:55:06.510Z'
                    __v: 0
  "/partner/profile":
    get:
      security:
        - bearerAuth: []
      summary: Get partner profile
      tags:
        - Partner User
      description: ''
      responses:
        '200':
          description: Partner user details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user details
                data:
                  _id: 60b190ea4cf0765bb8369faa
                  partnerID: 60b01f6b669e34779cd05ab5
                  firstName: Verifier
                  lastName: Sorosoke
                  userName: verifier
                  gender: Male
                  email: verifier@sorosoke.com
                  phoneNumber: '07032165498'
                  userType: verifier
                  address: 12, Verifier Ar.
                  stateOfAssignment: Abuja
                  password: verifierWere@2
                  onlineStatus: online
                  active: true
                  userID: yXp5efQVTF
                  createdAt: '2021-05-29T00:55:06.510Z'
                  updatedAt: '2021-05-29T00:55:06.510Z'
                  __v: 0
  "/partner/account":
    patch:
      security:
        - bearerAuth: []
      summary: Update partner user details
      tags:
        - Partner User
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerUser"
            example:
              phoneNumber: '09064558523'
              firstName: ''
              lastName: ''
              middleName: ''
              dob: ''
              gender: ''
              address: ''
              lga: ''
              state: ''
              country: ''
              avatar: ''
              password: ''
              disabilityStatus: ''
              religion: ''
      responses:
        '200':
          description: Updated partner user details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user details
                data:
                  _id: 60b190ea4cf0765bb8369faa
                  partnerID: 60b01f6b669e34779cd05ab5
                  firstName: Verifier
                  lastName: Sorosoke
                  userName: verifier
                  gender: Male
                  email: verifier@sorosoke.com
                  phoneNumber: '07032165498'
                  userType: verifier
                  address: 12, Verifier Ar.
                  stateOfAssignment: Abuja
                  password: verifierWere@2
                  onlineStatus: online
                  active: true
                  userID: yXp5efQVTF
                  createdAt: '2021-05-29T00:55:06.510Z'
                  updatedAt: '2021-05-29T00:55:06.510Z'
                  __v: 0
  /partner/requestPasswordRequest:
    post:
      summary: request password reset
      tags:
        - Partner User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
      responses:
        200:
          description: password request sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Passsword Reset Link Sent Successfully
        404:
          description: acount not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Account Does Not Exist
  /partner/resetPassword:
    post:
      summary: reset user password
      tags:
        - Partner User
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: nov039jus98fdhvcwe98fh3433433
                token:
                  type: string
                  example: 98e3b398hbf92832932n29832903h929382n9v8h9rn29rnv938h299nr9283hv92hr93nbv2938hr9vn938hv92rn93283h9232...
                password:
                  type: string
                  format: password
                  example: ogbongePassword4@ver
      responses:
        200:
          description: password reset sucessfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Password Reset Successfully
  "/public/cases":
    get:
      summary: Get all cases
      tags:
        - Public
      security:
        - bearerAuth: []
      parameters:
        - description: Filter by Resolution Status
          in: query
          name: resolutionStatus
          schema:
            type: string
            enum:
              - resolved
              - unResolved
        - description: Filter by Report Type
          in: query
          name: reportType
          schema:
            type: string
            enum:
              - Standard
              - QuickReport
        - description: Page
          in: query
          name: page
          example: 1
          schema:
            type: integer
        - description: Limit
          in: query
          name: limit
          example: 20
          schema:
            type: integer
        - description: Filter by State
          in: query
          name: state
          example: Abuja
          schema:
            type: string
        - description: Filter by LGA
          in: query
          name: lga
          schema:
            type: string
        - description: Filter by Case Type Status
          in: query
          name: caseTypeStatus
          schema:
            type: string
            enum:
              - QuickReport
              - Case
      responses:
        '200':
          description: All cases fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      cases:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Case"
                      total:
                        type: integer
                      page:
                        type: integer
              example:
                message: Cases Fetched Successfully
                status: success
                data:
                  cases:
                    - _id: 60b2b1c551929b3f8b7a7e83
                      caseTitle: Swatted
                      caseSummary: Swatted...
                      categoryGroupID: 60b2b051f4ff133eeaaaca1a
                      publishedBy: 60b190ea4cf0765bb8369faa
                      datePublished: '2021-05-29T21:27:33.145Z'
                      caseAvatar: https://api.placeholder.com/150
                      __v: 0
                      publisher:
                        _id: 60bb9a66ae288b566f0428f5
                        firstName: Admin
                        lastName: Sorosoke
                      followStatus: false
                  total: 1
                  page: 1
  "/public/cases/{id}":
    get:
      security:
        - bearerAuth: []
      summary: Get single public case
      tags:
        - Public
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              examples:
                userLoggedIn:
                  summary: when user is logged in
                  value:
                    status: success
                    message: case fetched successfully
                    data:
                      _id: 60b6d73aa76ede328c15c863
                      caseTitle: Swatted
                      caseAvatar: https://api.placeholder.com/150
                      caseSunnary: Swatted
                      categoryGroupID: 60b6d32afb84141a1e397f82
                      categories:
                        - Assault
                        - Abuse
                      datePublished: '2021-05-29T00:55:06.510Z'
                      dateOfIncident: '2021-05-29T00:55:06.510Z'
                      hourOfIncident: '00:55:06'
                      address: 12, Owonikoko St.
                      lga: ''
                      state: Ondo
                      resolutionStatus: resolved
                      reportType: Standard
                      userFollowStatus: true
                      __v: 0
                      publisher:
                        _id: 60bb9a66ae288b566f0428f5
                        firstName: Admin
                        lastName: Sorosoke
                userNotLoggedIn:
                  summary: when user is not logged in
                  value:
                    status: success
                    message: Case fetched successfully
                    data:
                      _id: 60b6d73aa76ede328c15c863
                      caseTitle: Swatted
                      caseAvatar: https://api.placeholder.com/150
                      caseSunnary: Swatted
                      categoryGroupID: 60b6d32afb84141a1e397f82
                      categories:
                        - Assault
                        - Abuse
                      datePublished: '2021-05-29T00:55:06.510Z'
                      dateOfIncident: '2021-05-29T00:55:06.510Z'
                      hourOfIncident: '00:55:06'
                      address: 12, Owonikoko St.
                      lga: ''
                      state: Ondo
                      resolutionStatus: resolved
                      reportType: Standard
                      userFollowStatus: false
                      __v: 0
                      publisher:
                        _id: 60bb9a66ae288b566f0428f5
                        firstName: Admin
                        lastName: Sorosoke
  "/public/category/groups":
    get:
      summary: Get all category groups
      tags:
        - Public
      responses:
        '200':
          description: Category groups fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseCategoryGroup"
              example:
                status: success
                message: Case Category Groups Fetched
                data:
                  groups:
                    - _id: 60affb6a3dc1114794a4cb64
                      groupName: Human Rights
                      imageIcon: https://api.placeholder.com/150
                      _v: 0
  "/public/group/{groupID}/categories":
    get:
      summary: Get all categories
      tags:
        - Public
      parameters:
        - description: group ID
          in: path
          required: true
          name: groupID
          schema:
            type: string
      responses:
        '200':
          description: Category groups fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseCategory"
              example:
                _id: 60b1807b2525d74ce37cbd85
                categoryName: Human Trafficking
  "/case/create":
    post:
      security:
        - bearerAuth: []
      summary: Create a case report
      tags:
        - Case
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Case"
            example:
              dateOfIncident: '2021-05-29T21:21:57.922Z'
              categoryGroupID: 60b2b051f4ff133eeaaaca1a
              categories: 60b6d4e8a76ede328c15c85b,60b6d4f7a76ede328c15c85c
              state: Abuja
              addressOfIncident: Gatara
              areYouTheVictim: 'Yes'
              reportType: Standard
              country: Nigeria
              descriptionOfIncident: A friend got swatted
              lga: ''
              casePleas: ''
              tags: ''
              hourOfIncident: ''
              caseAvatar: https://via.placeholder.com/150
      responses:
        '201':
          description: Case reported successfully
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                message: Case Created Succesfully
                status: success
                data:
                  case:
                    _id: 60b2b1c551929b3f8b7a7e83
                    caseID: SCSE64407
                    __v: 0
  "/case/all":
    get:
      security:
        - bearerAuth: []
      summary: Get all cases
      tags:
        - Case
      parameters:
        - description: Filter by Resolution Status
          in: query
          name: resolutionStatus
          schema:
            type: string
            enum:
              - unresolved
              - resolved
              - onlyReport
        - description: Filter by Verification Status
          in: query
          name: verificationStatus
          schema:
            type: string
            enum:
              - unVerified
              - verified
        - description: Filter by Platform of Report
          in: query
          name: platformOfReport
          schema:
            type: string
            enum:
              - web
              - mobile
              - sms
        - description: Filter by Published status
          in: query
          name: publishStatus
          schema:
            type: string
            enum:
              - unPublished
              - published
        - description: Filter by Report Type
          in: query
          name: reportType
          schema:
            type: string
            enum:
              - Standard
              - QuickReport
        - description: Filter by Case Type Status
          in: query
          name: caseTypeStatus
          schema:
            type: string
            enum:
              - Incidence
              - Case
              - QuickReport
        - description: Page
          in: query
          name: page
          example: 1
          schema:
            type: integer
        - description: Limit
          in: query
          name: limit
          example: 20
          schema:
            type: integer
      responses:
        '200':
          description: All cases fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      cases:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Case"
                      total:
                        type: integer
                      page:
                        type: integer
              example:
                message: Cases Fetched Succesfully
                status: success
                data:
                  cases:
                    - _id: 60b2b1c551929b3f8b7a7e83
                      caseID: SCSE44766
                      caseTitle: NotYetAssigned
                      dateOfIncident: '2021-05-29T21:21:57.922Z'
                      caseTypeStatus: Incidence
                      publishStatus: unPublished
                      resolutionStatus: unResolved
                      verificationStatus: unVerified
                      platformOfReport: web
                      categoryID: 60b2b051f4ff133eeaaaca1a
                      addressOfIncident: Gatara
                      state: Abuja
                      reportType: Standard
                      publicUserID: 60b0050a1416ba54d2af818b
                      createdAt: 202a1-05-29T21:27:33.145Z
                      updatedAt: '2021-05-29T21:27:33.145Z'
                      __v: 0
                  total: 1
                  page: 1
  "/case/{id}":
    get:
      security:
        - bearerAuth: []
      summary: Get a case
      tags:
        - Case
      parameters:
        - description: Case id
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      responses:
        '200':
          description: Case fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                status: success
                message: Case Fetched Succesfully
                case:
                  _id: 60b2b1c551929b3f8b7a7e83
                  caseID: SCSE44766
                  dateOfIncident: '2021-05-29T21:21:57.922Z'
                  resolutionStatus: unResolved
                  verificationStatus: unVerified
                  platformOfReport: web
                  categoryID: 60b2b051f4ff133eeaaaca1a
                  state: Abuja
                  reportType: Standard
                  createdAt: '2021-05-29T21:27:33.145Z'
                  __v: 0
  "/case/{id}/update":
    patch:
      security:
        - bearerAuth: []
      summary: Update an existing case
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          required: true
          name: id
          schema:
            type: string
            example: 60b8f1390df63e6153510c9c
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Case"
            example:
              casePleas: Please help me
              addressLandmarK: Owonikoko
      responses:
        '200':
          description: Case updated
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                status: success
                message: Case updated successfully
                data:
                  _id: 60b8f1390df63e6153510c9c
                  casePleas: Please help me
                  addressLandmark: Owonikoko
                  caseAvatar: ''
                  lga: ''
                  state: ''
                  country: ''
                  categoryGroupID: ''
  "/case/{id}/verify":
    patch:
      security:
        - bearerAuth: []
      summary: Verify a case
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              properties:
                verificationStatus:
                  type: string
            example:
              verificationStatus: verified
      responses:
        '200':
          description: Case verified
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                status: success
                message: Case verified
                case:
                  _id: 60b2b1c551929b3f8b7a7e83
                  caseTitle: NotYetAssigned
                  dateOfIncident: '2021-05-29T21:21:57.922Z'
                  caseTypeStatus: Incidence
                  publishStatus: unPublished
                  resolutionStatus: unResolved
                  verificationStatus: verified
                  platformOfReport: web
                  categoryID: 60b2b051f4ff133eeaaaca1a
                  addressOfIncident: Gatara
                  state: Abuja
                  reportType: Standard
                  publicUserID: 60b0050a1416ba54d2af818b
                  createdAt: '2021-05-29T21:27:33.145Z'
                  updatedAt: '2021-05-29T21:27:33.145Z'
                  caseID: SCSE44766
                  __v: 0
  "/case/{id}/assign":
    patch:
      security:
        - bearerAuth: []
      summary: Assign a case to a partner
      tags:
        - Case
      parameters:
        - description: Case id
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerUser"
            example:
              assignedPartnerUserId: 60b180282525d74ce37cbd84
      responses:
        '200':
          description: Case assigned
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                _id: 60b2b1c551929b3f8b7a7e83
                caseTitle: NotYetAssigned
                dateOfIncident: '2021-05-29T21:21:57.922Z'
                caseTypeStatus: Incidence
                publishStatus: unPublished
                resolutionStatus: unResolved
                verificationStatus: verified
                platformOfReport: web
                categoryID: 60b2b051f4ff133eeaaaca1a
                addressOfIncident: Gatara
                state: Abuja
                reportType: Standard
                publicUserID: 60b0050a1416ba54d2af818b
                assignedPartnerUserId: 60b180282525d74ce37cbd84
                createdAt: '2021-05-29T21:27:33.145Z'
                updatedAt: '2021-05-29T21:27:33.145Z'
                caseID: SCSE44766
                __v: 0
  "/case/{id}/publish":
    patch:
      security:
        - bearerAuth: []
      summary: Publish case
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              properties:
                publishStatus:
                  type: string
            example:
              publishStatus: published
      responses:
        '200':
          description: Case published
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                _id: 60b2b1c551929b3f8b7a7e83
                caseTitle: NotYetAssigned
                dateOfIncident: '2021-05-29T21:21:57.922Z'
                caseTypeStatus: Incidence
                publishStatus: published
                resolutionStatus: unResolved
                verificationStatus: verified
                platformOfReport: web
                categoryID: 60b2b051f4ff133eeaaaca1a
                publishedBy: 60b180282525d74ce37cbd84
                addressOfIncident: Gatara
                state: Abuja
                reportType: Standard
                publicUserID: 60b0050a1416ba54d2af818b
                createdAt: '2021-05-29T21:27:33.145Z'
                updatedAt: '2021-05-29T21:27:33.145Z'
                caseID: SCSE44766
                __v: 0
  "/case/{id}/resolve":
    patch:
      security:
        - bearerAuth: []
      summary: Resolve case
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              properties:
                resolutionStatus:
                  type: string
            examples:
              resolved:
                summary: mark as resolved
                value:
                  resolutionStatus: resolved
      responses:
        '200':
          description: Case resolved/unresolved
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/Case"
              example:
                _id: 60b2b1c551929b3f8b7a7e83
                caseTitle: NotYetAssigned
                dateOfIncident: '2021-05-29T21:21:57.922Z'
                caseTypeStatus: Incidence
                publishStatus: published
                resolutionStatus: resolved
                verificationStatus: verified
                platformOfReport: web
                categoryID: 60b2b051f4ff133eeaaaca1a
                publishedBy: 60b180282525d74ce37cbd84
                addressOfIncident: Gatara
                state: Abuja
                reportType: Standard
                publicUserID: 60b0050a1416ba54d2af818b
                createdAt: '2021-05-29T21:27:33.145Z'
                updatedAt: '2021-05-29T21:27:33.145Z'
                caseID: SCSE44766
                __v: 0
  "/case/personal":
    get:
      security:
        - bearerAuth: []
      summary: Fetch all personal cases
      tags:
        - Case
        - User
      responses:
        '200':
          description: Case fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      personalCases:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Case"
                      total:
                        type: integer
                      page:
                        type: integer
              example:
                status: success
                message: Fetched Personal Cases
                data:
                  personalCases:
                    - caseAvatar: https://via.placeholder.com/150
                      caseID: SCSE02100
                      descriptionOfIncident: A friend got swatted
                      categoryGroupID: 60b2b051f4ff133eeaaaca1a
                      userFollowStatus: true
                      assignedPartner:
                        _id: 60bb9182a613c75be1bc5ca2
                        firstName: Staff
                        lastName: Sorosoke
                      categories:
                        - Assault
                        - Assault
                        - Assault
                        - Assault
                    - caseAvatar: https://via.placeholder.com/150
                      caseID: SCSE75170
                      descriptionOfIncident: A friend got swatted
                      categoryGroupID: 60b2b051f4ff133eeaaaca1a
                      userFollowStatus: true
                      assignedPartner:
                      categories:
                        - Assault
                        - Assault
                        - Assault
                        - Assault
                    - caseAvatar: https://via.placeholder.com/150
                      caseID: SCSE41524
                      descriptionOfIncident: A friend got swatted
                      categoryGroupID: 60b2b051f4ff133eeaaaca1a
                      userFollowStatus: true
                      assignedPartner:
                      categories:
                        - Assault
                        - Assault
                        - Assault
                        - Assault
  "/case/{id}/follow":
    patch:
      security:
        - bearerAuth: []
      summary: Follow/Unfollow Case case
      tags:
        - Case
        - User
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                followStatus:
                  type: string
                  enum:
                    - follow
                    - unfollow
            examples:
              follow:
                summary: follow a case
                value:
                  followStatus: follow
              unfollow:
                summary: unfollow a case
                value:
                  followStatus: unfollow
      responses:
        '200':
          description: Case Followed/Unfollowed
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: case followed successfully
  "/case/followed":
    get:
      security:
        - bearerAuth: []
      summary: Get all followed cases
      tags:
        - Case
        - User
      parameters:
        - description: Page
          in: query
          name: page
          schema:
            type: integer
          example: 1
        - description: Limit
          in: query
          name: limit
          schema:
            type: integer
          example: 20
      responses:
        '200':
          description: Cases fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      followedCases:
                        type: array
                        items:
                          "$ref": "#/components/schemas/Case"
              example:
                status: success
                message: Cases Fetched Succesfully
                data:
                  followedCases:
                    - _id: 60b9120dc1fb0225fd342a88
                      caseAvatar: https://res.cloudinary.com/dh27qdolw/image/upload/v1622741516/sorosoke/2021-06-03T17_31_54.369Z-ac7404c9-23ed-44ce-9219-b3bcaffb8098-Screenshot%20from%202021-06-01%2016-33-59.png.png
                      caseTitle: NotYetAssigned
                      categoryGroupID: 60b6d32afb84141a1e397f82
                      resolutionStatus: unResolved
                      reportType: Standard
                      state: Lagos
                      country: Nigeria
                      caseTypeStatus: Incidence
                      userFollowStatus: true
                      caseSummary: ''
                      lga: ''
                      hourOfIncident: ''
                      datePublished: ''
                      publishedBy: ''
                      categories:
                        - Assault
                        - Abuse
                      _v: 0
                  total: 1
                  page: 1
  "/case/create/{caseID}/caseWitness":
    post:
      security:
        - bearerAuth: []
      summary: Add case witness
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseWitness"
            example:
              firstNameOfWitness: Witney
              lastNameOfWitness: Hostin
              emailOfWitness: witty@whie.com
              phoneNumberOfWitness: ";'07608547896'"
              genderOfWitness: Female
              residentialAddressOfWitness: Witty Cr.
      responses:
        '201':
          description: Witness added successfully
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      suspect:
                        "$ref": "#/components/schemas/CaseWitness"
              example:
                message: Witness Created Succesfully
                status: success
                data:
                  witness:
                    _id: 60b42200adf18d5fe4e22eae
                    firstNameOfWitness: Witney
                    lastNameOfWitness: Hostin
                    emailOfWitness: witty@whie.com
                    phoneNumberOfWitness: ";'07608547896'"
                    genderOfWitness: Female
                    residentialAddressOfWitness: Witty Cr.
                    caseID: 60b2b1c551929b3f8b7a7e83
                    createdAt: '2021-05-30T23:38:40.155Z'
                    updatedAt: '2021-05-30T23:38:40.155Z'
                    caseWitnessID: SCEW46404
                    __v: 0
  "/case/create/{caseID}/otherDetails":
    post:
      deprecated: true
      security:
        - bearerAuth: []
      summary: Add case other details
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseOtherDetails"
      responses:
        '201':
          description: Other details added successfully
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      suspect:
                        "$ref": "#/components/schemas/CaseOtherDetails"
  "/case/create/{id}/evidence":
    post:
      security:
        - bearerAuth: []
      summary: Add case evidence
      tags:
        - Case
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                URL:
                  type: string
            example:
              fileName: Evidence 1
              URL: https://via.placeholder.com/150
      responses:
        '201':
          description: Case evidence added successfully
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Evidence Saved Successfully
  "/case/{caseID}/evidence":
    get:
      security:
        - bearerAuth: []
      summary: get case evidence
      tags:
        - Case
      parameters:
        - description: case ID
          in: path
          required: true
          name: caseID
          schema:
            type: string
      responses:
        '200':
          description: fetched evidence
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Evidence Fetched
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseEvidence"
                    example:
                      - _id: ''
                        fileID: ''
                        caseID: ''
                        fileName: ''
                        URL: ''
  "/case/evidence/{id}/delete":
    delete:
      summary: delete case evidence
      tags:
        - Case
      security:
        - bearerAuth: []
      parameters:
        - description: evidence ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: evidence file deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: evidence deleted successfully
  "/case/category/groups":
    get:
      security:
        - bearerAuth: []
      summary: Get all category groups
      tags:
        - Category Group
      responses:
        '200':
          description: Category groups fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseCategoryGroup"
              example:
                status: success
                message: Case Category Groups Fetched
                data:
                  - _id: 60affb6a3dc1114794a4cb64
                    groupName: Human Rights
                    description: Human Rights
                    imageIcon: https://api.placeholder.com
                    createdAt: '2021-05-27T20:04:58.743Z'
                    updatedAt: '2021-05-27T20:04:58.743Z'
                    categoryGroupID: SGRP72360
                    __v: 0
  "/case/category/group/create":
    post:
      security:
        - bearerAuth: []
      summary: Add case category group
      description: 'userTypes: ["super-admin","admin"]'
      tags:
        - Category Group
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageIcon:
                  type: string
                groupName:
                  type: string
                description:
                  type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      group:
                        "$ref": "#/components/schemas/CaseCategoryGroup"
              example:
                status: success
                message: Case Group Created Successfully
                data:
                  group:
                    _id: 60affb6a3dc1114794a4cb64
                    groupName: Human Rights
                    description: Human Rights
                    createdAt: '2021-05-27T20:04:58.743Z'
                    updatedAt: '2021-05-27T20:04:58.743Z'
                    categoryGroupID: SGRP72360
                    _v: 0
  "/case/category/group/{id}/update":
    patch:
      security:
        - bearerAuth: []
      parameters:
        - description: Group ID
          in: path
          name: id
          required: true
          schema:
            type: string
      tags:
        - Category Group
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseCategoryGroup"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseCategoryGroup"
                example:
                  status: success
                  message: Case Group updated successfully
                  data:
                    group:
                      _id: 60affb6a3dc1114794a4cb64
                      groupName: Human Rights
                      description: Human Rights
                      createdAt: '2021-05-27T20:04:58.743Z'
                      updatedAt: '2021-05-27T20:04:58.743Z'
                      categoryGroupID: SGRP72360
  "/case/category/group/{id}":
    delete:
      summary: delete category group
      security:
        - bearerAuth: []
      tags:
        - Category Group
      parameters:
        - description: Group ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group deleted
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
  "/case/category/{groupID}/categories":
    get:
      security:
        - bearerAuth: []
      summary: Get all categories
      tags:
        - Category
      parameters:
        - description: group ID
          in: path
          required: true
          name: groupID
          schema:
            type: string
            example: 60be1962453bd7003ccbef67
      responses:
        '200':
          description: Categories fetched
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseCategory"
              example:
                status: success
                message: Sub Categories Fetched
                data:
                  - _id: 60be1b28453bd7003ccbef6f
                    categoryName: Person with disability
                  - _id: 60bea7b9940b6d003d857a16
                    categoryName: Internally displaced persons
  "/case/category/group/{id}/create":
    post:
      security:
        - bearerAuth: []
      summary: Add case category
      tags:
        - Category
      parameters:
        - description: Group ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseCategory"
            example:
              categoryName: Assault
              description: ''
      responses:
        '201':
          description: Category created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      category:
                        "$ref": "#/components/schemas/CaseCategory"
              example:
                status: success
                message: Case Sub Category Added Successfully
                data:
                  _id: 60afe8050d89140049177cb2
                  categoryID: SCAT12643
                  categoryName: Female Genital Mutilation
                  categoryGroupID: 60afd6c30d89140049177caa
                  createdAt: '2021-05-27T18:42:13.101Z'
                  updatedAt: '2021-05-27T18:42:13.101Z'
  "/case/category/{id}/update":
    patch:
      security:
        - bearerAuth: []
      parameters:
        - description: Category ID
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60afe8050d89140049177cb2
      tags:
        - Category
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseCategory"
      responses:
        '200':
          description: Category edited
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseCategory"
              example:
                status: success
                message: Sub Category Updated Successfully
                data:
                  _id: 60afe8050d89140049177cb2
                  categoryID: SCAT12643
                  categoryName: Female Genital Mutilation
                  categoryGroupID: 60afd6c30d89140049177caa
                  createdAt: '2021-05-27T18:42:13.101Z'
                  updatedAt: '2021-05-27T18:42:13.101Z'
  "/case/category/{id}":
    delete:
      security:
        - bearerAuth: []
      tags:
        - Category
      parameters:
        - description: Category ID
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60afe8050d89140049177cb2
      responses:
        '200':
          description: deleted category
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Sub Category Deleted Successfully
  "/victim/case/{id}/create":
    post:
      security:
        - bearerAuth: []
      summary: Create case victim
      tags:
        - Victim
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseVictim"
            example:
              firstNameOfVictim: John
              lastNameOfVictim: Doe
              emailOfVictim: johndoe@vict.com
              phoneNumberOfVictim: '08035468521'
              genderOfVictim: Male
              residentialAddressOfVictim: 12, Vitc Cl.
              relationshipWithVictim: Friend
              middleNameOfVictim: ''
              addressLandmark: ''
              lgaOfVictim: ''
              stateOfVictim: ''
              countryOfVictim: ''
              victimOccupation: ''
              victimOrganizationType: Private
              victimOrganizationName: ''
              otherDetailsOfVictim: ''
              disabilityStatus: ''
              religion: ''
      responses:
        '201':
          description: Victim created
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseVictim"
              example:
                message: case victim created
                status: success
                data:
                  firstNameOfVictim: John
                  lastNameOfVictim: Doe
                  middleNameOfVictim: ''
                  _id: 60be5ee9f599125afcee9267
                  __v: 0
  "/victim/{id}/all":
    get:
      summary: Get all victims
      security:
        - bearerAuth: []
      parameters:
        - description: Case ID
          in: path
          name: id
          required: true
          schema:
            type: string
      tags:
        - Victim
      responses:
        '201':
          description: Fetched victims
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseVictim"
              example:
                status: success
                message: Fetched victims
                data:
                  - firstNameOfVictim: John
                    lastNameOfVictim: Doe
                    middleNameOfVictim: ''
                    _id: 60be5ee9f599125afcee9267
                    __v: 0
                  - firstNameOfVictim: John
                    lastNameOfVictim: Doe
                    middleNameOfVictim: ''
                    _id: 60be5ee9f599125afcee9267
                    __v: 0
  "/victim/{id}":
    get:
      tags:
        - Victim
      summary: Get a victim
      security:
        - bearerAuth: []
      parameters:
        - description: Victim ID
          in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        '201':
          description: Victim returned
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseVictim"
              example:
                firstNameOfVictim: John
                lastNameOfVictim: Doe
                emailOfVictim: johndoe@vict.com
                phoneNumberOfVictim: '08035468521'
                genderOfVictim: Male
                residentialAddressOfVictim: 12, Vitc Cl.
                relationshipWithVictim: Friend
                middleNameOfVictim: ''
                addressLandmark: ''
                lgaOfVictim: ''
                stateOfVictim: ''
                countryOfVictim: ''
                victimOccupation: ''
                victimOrganizationType: Private
                victimOrganizationName: ''
                otherDetailsOfVictim: ''
                disabilityStatus: ''
                religion: ''
  "/victim/{id}/update":
    patch:
      security:
        - bearerAuth: []
      summary: Update victim details
      tags:
        - Victim
      parameters:
        - description: Victim ID
          in: path
          required: true
          name: id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseVictim"
            example:
              firstNameOfVictim: John
              lastNameOfVictim: Doe
              emailOfVictim: johndoe@vict.com
              phoneNumberOfVictim: '08035468521'
              genderOfVictim: Male
              residentialAddressOfVictim: 12, Vitc Cl.
              relationshipWithVictim: Friend
              middleNameOfVictim: ''
              addressLandmark: ''
              lgaOfVictim: ''
              stateOfVictim: ''
              countryOfVictim: ''
              victimOccupation: ''
              victimOrganizationType: Private
              victimOrganizationName: ''
              otherDetailsOfVictim: ''
              disabilityStatus: ''
              religion: ''
      responses:
        '200':
          description: Victim updated
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseVictim"
              example:
                firstNameOfVictim: John
                lastNameOfVictim: Doe
                emailOfVictim: johndoe@vict.com
                phoneNumberOfVictim: '08035468521'
                genderOfVictim: Male
                residentialAddressOfVictim: 12, Vitc Cl.
                relationshipWithVictim: Friend
                middleNameOfVictim: ''
                addressLandmark: ''
                lgaOfVictim: ''
                stateOfVictim: ''
                countryOfVictim: ''
                victimOccupation: ''
                victimOrganizationType: Private
                victimOrganizationName: ''
                otherDetailsOfVictim: ''
                disabilityStatus: ''
                religion: ''
  "/victim/{id}/delete":
    delete:
      security:
        - bearerAuth: []
      summary: Delete case victim
      tags:
        - Victim
      parameters:
        - description: Victim ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Victim deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Victim Deleted Successfully
  "/comment/create/{caseId}":
    post:
      security:
        - bearerAuth: []
      summary: Comment on a case
      tags:
        - Comment
      parameters:
        - description: Case ID
          in: path
          name: caseId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseComment"
            example:
              comment: This is really unacceptable
      responses:
        '201':
          description: Comment added
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      comment:
                        "$ref": "#/components/schemas/CaseComment"
              example:
                status: success
                message: comments fetched
                data:
                  - id: 60ba2d6c3ffa8060dda74314,
                    caseID: 60b9120dc1fb0225fd342a88,
                    avatar: https://via.placeholder.com/150
                    userName: johnnyJan
                    comment: May God save us
                    dateOfComment: '2021-06-04T13:41:00.551Z'
  "/comment/{caseID}":
    get:
      description: get comments
      tags:
        - Comment
      parameters:
        - description: case ID
          in: path
          required: true
          name: caseID
          schema:
            type: string
            example: 60ba2d6c3ffa8060dda74314
      responses:
        '200':
          description: case read
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseComment"
              example:
                status: success
                message: comments fetched
                data:
                  - id: 60ba2d6c3ffa8060dda74314,
                    caseID: 60b9120dc1fb0225fd342a88,
                    avatar: https://via.placeholder.com/150
                    userName: johnnyJan
                    comment: May God save us
                    dateOfComment: '2021-06-04T13:41:00.551Z'
  "/comment/{id}":
    patch:
      security:
        - bearerAuth: []
      summary: update the case comment
      tags:
        - Comment
      parameters:
        - description: comment id
          in: path
          required: true
          name: id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                caseID:
                  "$ref": "#/components/schemas/Case"
                comment:
                  "$ref": "#/components/schemas/CaseComment"
            example:
              caseID: ''
              comment: Okay, this is getting out of hand
      responses:
        '200':
          description: case updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  comment:
                    "$ref": "#/components/schemas/CaseComment"
              example:
                status: success
                message: Comment Updated
                comment:
                  _id: 60ba2d6c3ffa8060dda74314
                  caseID: 60b9120dc1fb0225fd342a88
                  comment: Okay, this is getting out of hand
  "/comment/:id/delete":
    delete:
      security:
        - bearerAuth: []
      summary: delete case comment
      tags:
        - Comment
      parameters:
        - description: comment id
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: comment deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Comment Deleted
  "/contact/create":
    post:
      summary: Request contact details
      tags:
        - Contact
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Contact"
            example:
              phoneNumber: '08012345678'
              email: sorsoke@example.com
              subject: Help!
              message: egami ooooo
              senderName: Tunde Udo Muhammed
      responses:
        '201':
          description: Contact details requested
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Contact requested successfully
  "/contact/":
    get:
      summary: get all contact queries
      tags:
        - Contact
      security:
        - bearerAuth: []
      parameters:
        - description: page number
          in: query
          name: page
          schema:
            type: integer
          example: 1
        - description: limit
          in: query
          name: limit
          schema:
            type: integer
          example: 20
      responses:
        '200':
          description: contact details fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Contact Details Fetched
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/Contact"
                    example:
                      - _id: ''
                        tickedID: ''
                        senderName: ''
                        phoneNumber: ''
                        email: ''
                        subject: ''
                        message: ''
                        status: ''
                        createdAt: ''
                        updatedAt: ''
  "/contact/{id}":
    get:
      summary: fetch a single contact enquiry
      tags:
        - Contact
      security:
        - bearerAuth: []
      parameters:
        - description: contact ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Enquiry Fetched
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Enquiry Fetched
                  data:
                    "$ref": "#/components/schemas/Contact"
                    example:
                      _id: ''
                      tickedID: ''
                      senderName: ''
                      phoneNumber: ''
                      email: ''
                      subject: ''
                      message: ''
                      status: ''
                      createdAt: ''
                      updatedAt: ''
  "/partner/create":
    post:
      security:
        - bearerAuth: []
      summary: create partner details
      tags:
        - Super Admin
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Partner"
            example:
              organizationName: Sorosoke
              organizationType: NGO
              email: admin@sorosoke.com
              address: 1, Sorosoke Av.
              addressLandmark: Abuja
              phoneNumber: '07032165498'
              state: Abuja
              regNumber: 9MDWI89DKVNW90REVN
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Partner"
              example:
                message: Partner organization created
                status: success
                data:
                  organization:
                    _id: 60b01f6b669e34779cd05ab5
                    organizationName: Sorosoke
                    organizationType: NGO
                    email: admin@sorosoke.com
                    address: 1, Sorosoke Av.
                    phoneNumber: '07032165498'
                    state: Abuja
                    regNumber: 9MDWI89DKVNW90REVN
                    partnerID: xFirObp4P6
                    createdAt: '2021-05-28T23:44:59.568Z'
                    updatedAt: '2021-05-28T23:44:59.568Z'
                    __v: 0
  "/partner/{id}/branch/create":
    post:
      security:
        - bearerAuth: []
      summary: create a branch of an organization
      description: 'userTypes: [super-admin,admin]'
      tags:
        - Partner Organization
      parameters:
        - description: partner organization id
          in: path
          required: true
          name: id
          schema:
            type: string
          example: 60b1807b2525d74ce37cbd85
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerBranch"
            example:
              branchName: Buff Up Branch
              address: 2, Sorosoke Branch
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerBranch"
              example:
                status: success
                message: branch created succesfully
                data:
                  _id: 60b18a394da9bb59766731f6
                  branchName: Buff Up Branch
                  partnerID: 60b1807b2525d74ce37cbd85
                  branchID: uGBVrYxOVH
                  createdAt: '2021-05-29T00:26:33.445Z'
                  updatedAt: '2021-05-29T00:26:33.445Z'
                  __v: 0
  "/progress/create/{caseID}":
    post:
      security:
        - bearerAuth: []
      summary: Add case progress
      tags:
        - Case Progress
      parameters:
        - description: Case ID
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                messageContent:
                  type: string
                privacyStatus:
                  type: string
                  enum: ['public', 'private']
                docs:
                  type: array
                  items:
                    properties:
                      docTitle:
                        type: string
                      URL:
                        type: string
      responses:
        '201':
          description: Case Progress added
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      progress:
                        "$ref": "#/components/schemas/CaseProgress"
                      docs:
                        type: array
                        items:
                          $ref: "#/components/schemas/CaseProgressDoc"
              example:
                status: success
                message: Progress Report Has Been Successfully Added To The Case File
                data:
                  progress:
                    _id: 60ce6d559363dc6ad3a3af82
                    privacyStatus: public
                    caseID: 60bcd725a4c7b32d3a8f9b96
                    publicUserID: 60b008fa9c946258111c7271
                    partnerUserID: 60bba856e9a8580d1ecc3e53
                    title: Progress One
                    messageContent: This is the first progress
                    createdAt: '2021-06-19T22:19:01.486Z'
                    updatedAt: '2021-06-19T22:19:01.486Z'
                    __v: 0
                  docs:
                    - _id: 60ce6d559363dc6ad3a3af84
                      caseProgressID: 60ce6d559363dc6ad3a3af82
                      docTitle: Progress Document One
                      URL: https://via.placeholder.com
                      createdAt: '2021-06-19T22:19:01.744Z'
                      updatedAt: '2021-06-19T22:19:01.744Z'
                      docID: SPGD13404
                      __v: 0
  "/progress/{caseID}/":
    get:
      security:
        - bearerAuth: []
      tags:
        - Case Progress
      summary: Get case progress
      parameters:
        - description: case ID
          in: path
          required: true
          name: caseID
          schema:
            type: string
        - name: page
          in: query
          schema:
            type: number
            description: page
        - name: limit
          in: query
          schema:
            type: number
          description: limit
      responses:
        '200':
          description: case progress returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  progress:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseProgress"
              example:
                message: Current Case Progress
                status: success
                data:
                  progress:
                    - currentProgress:
                        privacyStatus: public
                        _id: 60ce6d559363dc6ad3a3af82
                        publicUserID: 60b008fa9c946258111c7271
                        title: Progress One
                        messageContent: This is the first progress
                      docs:
                        - _id: 60ce6d559363dc6ad3a3af84
                          caseProgressID: 60ce6d559363dc6ad3a3af82
                          docTitle: Progress Document One
                          URL: https://via.placeholder.com
                          createdAt: '2021-06-19T22:19:01.744Z'
                          updatedAt: '2021-06-19T22:19:01.744Z'
                          docID: SPGD13404
                          __v: 0
                  total: 1
                  page: 1
  "/progress/{id}/update":
    patch:
      summary: update case progress
      security:
        - bearerAuth: []
      parameters:
        - description: progress ID
          in: path
          name: id
          required: true
          schema:
            type: string
      tags:
        - Case Progress
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                caseID:
                  "$ref": "#/components/schemas/Case"
                title:
                  type: string
                messageContent:
                  type: string
                privacyStatus:
                  type: string
                  enum:
                    - private
                    - public
            example:
              caseID: 60be14c3453bd7003ccbef58
              title: Suspect has been found
              messageContent: lorem ipsum lorem for everything lorem
              privacyStatus: public
      responses:
        '200':
          description: case progress updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  updatedProgress:
                    "$ref": "#/components/schemas/CaseProgress"
              example:
                caseID: SCES78201
                title: Suspect has been found
                messageContent: lorem ipsum lorem for everything lorem
                privacyStatus: public
  "/progress/{id}/delete":
    delete:
      summary: Delete case progress/doc
      tags:
        - Case Progress
      security:
        - bearerAuth: []
      parameters:
        - description: progress ID
          in: path
          required: true
          name: id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                deletionType:
                  type: string
                  enum:
                    - file
                    - normal
                    - all
            examples:
              normal:
                summary: delete normal progress
                value:
                  deletionType: normal
              file:
                summary: delete progress docs
                value:
                  deletionType: file
              all:
                summary: delete the progress including the file attached
                value:
                  deletionType: all
      responses:
        '200':
          description: case deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Case Progress Deleted Successfully
  "/details/create/{caseID}":
    post:
      security:
        - bearerAuth: []
      summary: Add case other details
      tags:
        - Case Other Details
      parameters:
        - description: Case ID
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                from:
                  type: string
                message:
                  type: string
                docs:
                  type: array
                  items:
                    properties:
                      docTitle:
                        type: string
                      URL:
                        type: string
                        format: url
      responses:
        '201':
          description: Case Other details added
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      progress:
                        "$ref": "#/components/schemas/CaseOtherDetails"
  /details/{caseID}/conversations:
    get:
      summary: Fetch all conversations
      tags:
        - Case Other Details
      security:
        - bearerAuth: []
      parameters:
        - description: case ID
          name: caseID
          in: path
          required: true
          schema:
            type: string
        - name: page
          in: query
          description: page number
          schema:
            type: number
        - name: limit
          in: query
          description: limit
          schema:
            type: number
      responses:
        200:
          description: fetched all cases
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Other Details Conversation Returned
                  data:
                    type: object
                    properties:
                      conversations:
                        type: array
                        items:
                          type: object
                          properties:
                            details:
                              $ref: "#/components/schemas/CaseOtherDetails"
                            docs:
                              type: array
                              items:
                                $ref: "#/components/schemas/CaseOtherDetailsDoc"
                    example:
                      conversations:
                        - details:
                            _id: 60cdf1ceea66830a974bd4d9
                            caseID: 60bcd725a4c7b32d3a8f9b96
                            from: super-admin
                            userID: 60b29de72e54080049ff8233
                            message: string
                            createdAt: '2021-06-19T13:31:58.492Z'
                            updatedAt: '2021-06-19T13:31:58.492Z'
                            __v: 0
                          docs:
                            - _id: 60cdf1ceea66830a974bd4db
                              caseOtherDetailsID: 60cdf1ceea66830a974bd4d9
                              URL: https://via.placeholder.com
                              docTitle: Document 1
                              createdAt: '2021-06-19T13:31:58.719Z'
                              updatedAt: '2021-06-19T13:31:58.719Z'
                              docID: SODD75700
                              __v: 0
                            - _id: 60cdf1ceea66830a974bd4dd
                              caseOtherDetailsID: 60cdf1ceea66830a974bd4d9
                              URL: https://via.placeholder.com
                              docTitle: Document 1
                              createdAt: '2021-06-19T13:31:58.953Z'
                              updatedAt: '2021-06-19T13:31:58.953Z'
                              docID: SODD05235
                              __v: 0
  /details/{id}/delete:
    delete:
      summary: delete a conversation
      security:
        - bearerAuth: []
      tags:
        - Case Other Details
      parameters:
        - name: id
          in: path
          required: true
          description: conversations id
          schema:
            type: string
      responses:
        200:
          description: deleted conversation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                   type: string
                   example: success
                  message:
                    type: string
                    example: conversation deleted successfully
  "/suspect/{caseID}/create":
    post:
      security:
        - bearerAuth: []
      summary: Add case suspect
      tags:
        - Suspect
      parameters:
        - description: Case ID
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseSuspect"
            example:
              _id: 60cc9f619931463ac38b93c5
              firstNameOfSuspect: Jonas
              lastNameOfSuspect: Phils
              __v: 0
      responses:
        '201':
          description: Suspect added successfully
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      suspect:
                        "$ref": "#/components/schemas/CaseSuspect"
              example:
                status: success
                message: Suspect Created Succesfully
                data:
                  suspect:
                    guiltStatus: Not-guilty
                    _id: 60b41db683f4b35cf57e2027
                    firstNameOfSuspect: Jonas
                    lastNameOfSuspect: Phils
                    emailOfSuspect: jonesphlias@email.com
                    phoneNumberOfSuspect: '08035468521'
                    genderOfSuspect: Female
                    residentialAddressOfSuspect: 91, Sus Ln.
                    caseID: 60b417a0ed9c8c3106ecc3f9
                    createdAt: '2021-05-30T23:20:22.559Z'
                    updatedAt: '2021-05-30T23:20:22.559Z'
                    caseSuspectID: SCES10220
                    __v: 0
  "/suspect/{caseID}/all":
    get:
      summary: Get all suspects
      security:
        - bearerAuth: []
      tags:
        - Suspect
      parameters:
        - description: Case ID
          in: path
          name: caseID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returned all suspects
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseSuspect"
              example:
                status: success
                message: Fetched All Suspects
                data:
                  - _id: ''
                    firstNameOfSuspect: ''
                    lastNameOfSuspect: ''
                    middleNameOfSuspect: ''
                    __v: 0
  "/suspect/{id}":
    get:
      summary: Get one suspect
      security:
        - bearerAuth: []
      parameters:
        - description: Suspect ID
          in: path
          name: id
          required: true
          schema:
            type: string
      tags:
        - Suspect
      responses:
        '200':
          description: Fetched suspect
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseSuspect"
              example:
                status: success
                message: suspect fetched
                data:
                  firstNameOfSuspect: Jonas
                  lastNameOfSuspect: Phils
                  emailOfSuspect: jonesphlias@email.com
                  phoneNumberOfSuspect: '08035468521'
                  genderOfSuspect: Female
                  residentialAddressOfSuspect: 91, Sus Ln.
                  suspectAgeGroup: ''
                  guiltStatus: ''
                  relationshipWithVictim: ''
  "/suspect/{id}/update":
    patch:
      summary: Edit suspect
      security:
        - bearerAuth: []
      tags:
        - Suspect
      parameters:
        - description: Suspect ID
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseSuspect"
            example:
              firstNameOfSuspect: Jonas
              lastNameOfSuspect: Phils
              emailOfSuspect: jonesphlias@email.com
              phoneNumberOfSuspect: '08035468521'
              genderOfSuspect: Female
              residentialAddressOfSuspect: 91, Sus Ln.
              suspectAgeGroup: ''
              guiltStatus: ''
              relationshipWithVictim: ''
      responses:
        '200':
          description: suspect updated successfully
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseSuspect"
              example:
                status: success
                message: Suspect Updated Successfully
                data:
                  firstNameOfSuspect: Jonas
                  lastNameOfSuspect: Phils
                  emailOfSuspect: jonesphlias@email.com
                  phoneNumberOfSuspect: '08035468521'
                  genderOfSuspect: Female
                  residentialAddressOfSuspect: 91, Sus Ln.
                  suspectAgeGroup: ''
                  guiltStatus: ''
                  relationshipWithVictim: ''
  "/suspect/{id}/delete":
    delete:
      summary: Delete Suspect
      security:
        - bearerAuth: []
      parameters:
        - description: Suspect ID
          in: path
          name: id
          required: true
          schema:
            type: string
      tags:
        - Suspect
      responses:
        '200':
          description: Suspect deleted
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: Suspect Deleted Successfully
  "/witness/{caseID}/create":
    post:
      summary: add case witness
      security:
        - bearerAuth: []
      tags:
        - Witness
      parameters:
        - description: case ID
          in: path
          required: true
          name: caseID
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseWitness"
            example:
              firstNameOfWitness: John
              middleNameOfWitness: ''
              lastNameOfWitness: Doe
              emailOfWitness: john@doe.com
              phoneNumberOfWitness: '08012354678'
              witnessAgeGroup: ''
              genderOfWitness: Female
              residentialAddressOfWitness: 1, John Av
              addressLandmark: ''
              lgaOfWitness: ''
              stateOfWitness: ''
              countryOfWitness: ''
              witnessOccupation: ''
              witnessOrganizationType: NGO
              witnessOrganizationID: ''
              witnessOrganizationName: ''
              otherDetailsOfWitness: ''
              disabilityStatus: ''
              religion: ''
              relationshipWithVictim: ''
      responses:
        '201':
          description: witness added
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseWitness"
              example:
                status: success
                message: witness created successfully
                data:
                  _id: ''
                  firstNameOfWitness: ''
                  middleNameOfWitness: ''
                  lastNameOfWitness: ''
                  __v: 0
  "/witness/{caseID}/all":
    get:
      summary: get all witnesses of a case
      tags:
        - Witness
      security:
        - bearerAuth: []
      parameters:
        - description: case ID
          in: path
          required: true
          name: caseID
          schema:
            type: string
      responses:
        '200':
          description: fetched all witnesses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/CaseWitness"
              example:
                status: success
                message: Fetched All Witnesses
                data:
                  - _id: ''
                    firstNameOfWitness: ''
                    middleNameOfWitness: ''
                    lastNameOfWitness: ''
                    __v: 0
                  - _id: ''
                    firstNameOfWitness: ''
                    middleNameOfWitness: ''
                    lastNameOfWitness: ''
                    __v: 0
  "/witness/{id}":
    get:
      summary: fetch a single witness
      tags:
        - Witness
      security:
        - bearerAuth: []
      parameters:
        - description: witness ID
          in: path
          required: true
          name: id
          schema:
            type: string
      responses:
        '200':
          description: returned witness data
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/CaseWitness"
              example:
                status: success
                message: witness fetched successfully
                data:
                  _id: ''
                  caseID: ''
                  firstNameOfWitness: John
                  middleNameOfWitness: ''
                  lastNameOfWitness: Doe
                  emailOfWitness: john@doe.com
                  phoneNumberOfWitness: '08012354678'
                  witnessAgeGroup: ''
                  genderOfWitness: Female
                  residentialAddressPfWitness: 1, John Av
                  addressLandmark: ''
                  lgaOfWitness: ''
                  stateOfWitness: ''
                  countryOfWitness: ''
                  witnessOccupation: ''
                  witnessOrganizationType: NGO
                  witnessOrganizationID: ''
                  witnessOrganizationName: ''
                  otherDetailsOfWitness: ''
                  disabilityStatus: ''
                  religion: ''
                  relationshipWithVictim: ''
  "/witness/{id}/update":
    patch:
      summary: update witness details
      tags:
        - Witness
      security:
        - bearerAuth: []
      parameters:
        - description: witness ID
          in: path
          required: true
          name: id
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CaseWitness"
            example:
              firstNameOfWitness: John
              middleNameOfWitness: ''
              lastNameOfWitness: Doe
              emailOfWitness: john@doe.com
              phoneNumberOfWitness: '08012354678'
              witnessAgeGroup: ''
              genderOfWitness: Female
              residentialAddressPfWitness: 1, John Av
              addressLandmark: ''
              lgaOfWitness: ''
              stateOfWitness: ''
              countryOfWitness: ''
              witnessOccupation: ''
              witnessOrganizationType: NGO
              witnessOrganizationID: ''
              witnessOrganizationName: ''
              otherDetailsOfWitness: ''
              disabilityStatus: ''
              religion: ''
              relationshipWithVictim: ''
      responses:
        '200':
          description: witness updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Witness Updated Successfully
                  data:
                    "$ref": "#/components/schemas/CaseWitness"
                    example:
                      firstNameOfWitness: John
                      middleNameOfWitness: ''
                      lastNameOfWitness: Doe
                      emailOfWitness: john@doe.com
                      phoneNumberOfWitness: '08012354678'
                      witnessAgeGroup: ''
                      genderOfWitness: Female
                      residentialAddressPfWitness: 1, John Av
                      addressLandmark: ''
                      lgaOfWitness: ''
                      stateOfWitness: ''
                      countryOfWitness: ''
                      witnessOccupation: ''
                      witnessOrganizationType: NGO
                      witnessOrganizationID: ''
                      witnessOrganizationName: ''
                      otherDetailsOfWitness: ''
                      disabilityStatus: ''
                      religion: ''
                      relationshipWithVictim: ''
  "/witness/{id}/delete":
    delete:
      tags:
        - Witness
      summary: delete witness data
      parameters:
        - description: witness ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: witness deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: witness deleted successfully
  "/branch/{partnerID}/create":
    post:
      summary: add branch to partner organization
      tags:
        - Branch
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: partnerID
          required: true
          description: partner organization ID
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerBranch"
      responses:
        '201':
          description: branch created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerBranch"
              example:
                status: success
                message: branch created
                data:
                  _id: ''
                  partnerID: ''
                  branchID: ''
                  branchName: ''
                  address: ''
                  ward: ''
                  lga: ''
                  state: ''
                  country: ''
  "/branch/{partnerID}/all":
    get:
      summary: fetch all branches
      tags:
        - Branch
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: partnerID
          required: true
          description: partner organization ID
          schema:
            type: string
      responses:
        '200':
          description: fetched all branches
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      "$ref": "#/components/schemas/PartnerBranch"
              example:
                status: success
                message: fetched all branches
                data:
                  - _id: ''
                    partnerID: ''
                    branchID: ''
                    branchName: ''
                    address: ''
                    ward: ''
                    lga: ''
                    state: ''
                    country: ''
  "/branch/{id}":
    get:
      summary: fetch branch
      tags:
        - Branch
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: branch ID
          schema:
            type: string
      responses:
        '200':
          description: fetched branch
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerBranch"
              example:
                status: success
                message: fetched a branch
                data:
                  _id: ''
                  partnerID: ''
                  branchID: ''
                  branchName: ''
                  address: ''
                  ward: ''
                  lga: ''
                  state: ''
                  country: ''
  "/branch/{id}/update":
    post:
      summary: update branch
      tags:
        - Branch
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: branch ID
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PartnerBranch"
      responses:
        '201':
          description: branch updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    "$ref": "#/components/schemas/PartnerBranch"
              example:
                status: success
                message: branch updated
                data:
                  _id: ''
                  partnerID: ''
                  branchID: ''
                  branchName: ''
                  address: ''
                  ward: ''
                  lga: ''
                  state: ''
                  country: ''
  "/branch/{id}/delete":
    delete:
      tags:
        - Branch
      summary: delete branch
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: branch ID
          schema:
            type: string
      responses:
        '200':
          description: branch deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: branch deleted
  /organization/create:
    post:
      summary: create organization
      security:
        - bearerAuth: []
      tags:
        - Organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
            example:
              orgName: ""
              orgType: ""
              description: ""
              emails:
                - org@example.com
              address: ""
              addressLandMark: ""
              phone:
                - '08012365478'
              lga: ""
              state: ""
              country: ""
              cacRegNo: ""
              orgStatus: ""
      responses:
        201:
          description: organization created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Organization"
              example:
                message: Organization Profile Created Succesfully
                status: success
                data:
                  emails:
                    - string
                  phones:
                    - string
                  _id: 60ce831fb3c1267d440ac9e0
                  orgName: string
                  orgType: Government
                  description: string
                  address: string
                  addressLandmark: string
                  lga: string
                  state: string
                  country: string
                  cacRegNo: string
                  orgStatus: HQ
                  addedBy: string
                  orgID: SORG32570
                  __v: 0
  /organization:
    get:
      summary: fetch all organizations
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: string
      responses:
        200:
          description: fetched all organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Organizations Returned
                  data:
                    type: object
                    properties:
                      organizations:
                        $ref: "#/components/schemas/Organization"
                    example:
                      organizations:
                        - emails:
                            - string
                          phones:
                            - string
                          _id: 60ce820ab209297cb07a9a1b
                          orgName: string
                          orgType: Government
                          description: string
                          address: string
                          addressLandmark: string
                          lga: string
                          state: string
                          country: string
                          cacRegNo: string
                          orgStatus: HQ
                          addedBy: string
                          orgID: SORG44414
                          __v: 0
                      total: 1
                      page: 1
  /organization/{id}:
    get:
      summary: get one organization
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: fetched on organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Organization Fetched
                  data:
                    $ref: "#/components/schemas/Organization"
                    example:
                      emails:
                        - string
                      phones:
                        - string
                      _id: 60ce820ab209297cb07a9a1b
                      orgName: string
                      orgType: Government
                      description: string
                      address: string
                      addressLandmark: string
                      lga: string
                      state: string
                      country: string
                      cacRegNo: string
                      orgStatus: HQ
                      addedBy: string
                      orgID: SORG44414
                      __v: 0
  /organization/{id}/update:
    patch:
      summary: update organization details
      tags:
        - Organization
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Organization"
            example:
                orgName: ""
                orgType: ""
                description: ""
                emails:
                  - org@example.com
                address: ""
                addressLandMark: ""
                phone:
                  - '08012365478'
                lga: ""
                state: ""
                country: ""
                cacRegNo: ""
                orgStatus: ""
                addedBy: ""
      responses:
        200:
          description: organization updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Organization Updated
                  data:
                    $ref: "#/components/schemas/Organization"
                    example:
                      emails: string
                      phones: string
                      _id: 60ce820ab209297cb07a9a1b
                      orgName: Owonikoko Micro Finance
                      orgType: Government
                      description: string
                      address: string
                      addressLandmark: string
                      lga: string
                      state: string
                      country: string
                      cacRegNo: string
                      orgStatus: HQ
                      addedBy: string
                      orgID: SORG44414
                      __v: 0
  /organization/{id}/delete:
    delete:
      summary: delete organization
      security:
        - bearerAuth: []
      tags:
        - Organization
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: organization deleted
          content:
            application/json:
              schema:
                type: string
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Organization Deleted
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PublicUser:
      additionalProperties: false
      type: object
      required:
        - firstName
        - lastName
        - userName
        - email
        - phoneNumber
        - password
        - address
      properties:
        _id:
          type: string
          readOnly: true
        userID:
          type: string
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        userName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        userAgeGroup:
          type: string
        gender:
          type: string
          enum:
            - Male
            - Female
        address:
          type: string
        addressLandmark:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        avatar:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        onlineStatus:
          type: string
          enum:
            - online
            - offline
          readOnly: true
          default: offline
        active:
          type: boolean
          default: true
          readOnly: true
        disabilityStatus:
          type: string
        religion:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Partner:
      additionalProperties: false
      type: object
      required:
        - organizationName
        - email
        - phoneNumber
        - address
        - regNumber
      properties:
        _id:
          type: string
        organizationName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        organizationType:
          type: string
          enum:
            - Government
            - NGO
            - Private
            - Others
        regNumber:
          type: string
        descriptionOfOrg:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    PartnerUser:
      additionalProperties: false
      type: object
      required:
        - firstName
        - lastName
        - userName
        - email
        - phoneNumber
        - password
        - address
        - stateOfAssignment
        - userType
      properties:
        _id:
          type: string
          readOnly: true
        userID:
          type: string
          readOnly: true
        partnerID:
          type: string
        branchID:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        userName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        dob:
          type: string
          format: date-time
        gender:
          type: string
          enum:
            - Male
            - Female
        userType:
          type: string
          enum:
            - super-admin
            - admin
            - staff
            - verifier
          default: staff
        address:
          type: string
        lga:
          type: string
        stateOfAssignment:
          type: string
        country:
          type: string
        avatar:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        onlineStatus:
          type: string
          enum:
            - online
            - offline
          readOnly: true
          default: offline
        active:
          type: boolean
          default: true
          readOnly: true
        disabilityStatus:
          type: string
        religion:
          type: string
    Case:
      additionalProperties: false
      type: object
      required:
        - caseAvatar
        - categoryGroupID
        - descriptionOfIncident
        - areYouTheVictim
        - reportType
        - platformOfReport
        - address
        - hourOfIncident
        - lga
        - state
        - country
        - dateOfIncident
      properties:
        _id:
          type: string
          readOnly: true
        caseID:
          type: string
          readOnly: true
        publicUserID:
          allOf:
            - "$ref": "#/components/schemas/PublicUser"
          readOnly: true
        categoryGroupID:
          "$ref": "#/components/schemas/CaseCategory"
        assignedPartnerUserId:
          allOf:
            - "$ref": "#/components/schemas/PartnerUser"
          readOnly: true
        caseTitle:
          type: string
        caseAvatar:
          type: string
        addressOfIncident:
          type: string
        addressLandmark:
          type: string
        dateOfIncident:
          type: string
          format: date-time
        hourOfIncident:
          type: string
        country:
          type: string
        state:
          type: string
        lga:
          type: string
        descriptionOfIncident:
          type: string
        areYouTheVictim:
          type: string
          enum:
            - 'Yes'
            - 'No'
          default: 'No'
        reportType:
          type: string
          enum:
            - Standard
            - QuickReport
        casePleas:
          type: string
        caseTypeStatus:
          type: string
          enum:
            - Incidence
            - Case
            - QuickReport
          default: Incidence
        caseSummary:
          type: string
          readOnly: true
        publishStatus:
          type: string
          enum:
            - published
            - unPublished
          default: unPublished
          readOnly: true
        publishedBy:
          allOf:
            - "$ref": "#/components/schemas/PartnerUser"
          readOnly: true
        resolutionStatus:
          type: string
          enum:
            - resolved
            - unResolved
            - onlyReport
          default: unResolved
          readOnly: true
        verificationStatus:
          type: string
          enum:
            - verified
            - unVerified
            - onlyReport
          default: unVerified
          readOnly: true
        platformOfReport:
          type: string
          enum:
            - mobile
            - web
            - sms
          default: web
        followedBy:
          readOnly: true
          type: array
          items:
            "$ref": "#/components/schemas/PartnerUser"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseCategory:
      additionalProperties: false
      type: object
      required:
        - categoryName
      properties:
        _id:
          type: string
          readOnly: true
        categoryID:
          type: string
        categoryGroupID:
          allOf:
            - "$ref": "#/components/schemas/CaseCategoryGroup"
          readOnly: true
        categoryName:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseCategoryGroup:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        categoryGroupID:
          type: string
          readOnly: true
        groupName:
          type: string
        description:
          type: string
        imageIcon:
          type: string
          format: binary
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseComment:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseID:
          "$ref": "#/components/schemas/Case"
        publicUserID:
          "$ref": "#/components/schemas/PublicUser"
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseEvidence:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseID:
          "$ref": "#/components/schemas/Case"
        fileName:
          type: string
        URL:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseOtherDetails:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        from:
          type: string
          enum:
            - super-admin
            - admin
            - staff
            - verifier
            - user
        userID:
          type: string
          format: uuid
        message:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseOtherDetailsDoc:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        docID:
          type: string
          readOnly: true
        docTitle:
          type: string
        URL:
          type: string
          format: binary
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseProgress:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        progressID:
          type: string
          readOnly: true
        caseID:
          "$ref": "#/components/schemas/Case"
        publicUserID:
          "$ref": "#/components/schemas/PublicUser"
        partnerUserID:
          "$ref": "#/components/schemas/PartnerUser"
        title:
          type: string
        message:
          type: string
        privacyStatus:
          type: string
          enum:
            - public
            - private
          default: private
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseProgressDoc:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        docID:
          type: string
          readOnly: true
        caseProgressID:
          "$ref": "#/components/schemas/CaseProgress"
        docTitle:
          type: string
        URL:
          type: string
          format: binary
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseSuspect:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseSuspectID:
          type: string
        caseID:
          "$ref": "#/components/schemas/Case"
        firstNameOfSuspect:
          type: string
        lastNameOfSuspect:
          type: string
        middleNameOfSuspect:
          type: string
        emailOfSuspect:
          type: string
        phoneNumberOfSuspect:
          type: string
        suspectAgeGroup:
          type: string
        genderOfSuspect:
          type: string
          enum:
            - Male
            - Female
        guiltStatus:
          type: string
          enum:
            - Guilty
            - Not-guilty
            - Accomplice
          default: Not-guilty
        residentialAddressOfSuspect:
          type: string
        lgaOfSuspect:
          type: string
        stateOfSuspect:
          type: string
        countryOfSuspect:
          type: string
        suspectOrganizationType:
          type: string
          enum:
            - Government
            - NGO
            - Private
            - Self Employed
            - Others
            - Unknown
        suspectOrganizationName:
          type: string
        otherDetailsOfSuspect:
          type: string
        addedBy:
          type: string
          format: uuid
        disabilityStatus:
          type: string
        addressLandmark:
          type: string
        religion:
          type: string
        relationshipWithVictim:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseTaggedCategories:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseTagID:
          type: string
          format: uuid
        caseID:
          "$ref": "#/components/schemas/Case"
        caseCategoryID:
          "$ref": "#/components/schemas/CaseCategory"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseVictim:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseVictimID:
          type: string
        caseID:
          "$ref": "#/components/schemas/Case"
        firstNameOfVictim:
          type: string
        lastNameOfVictim:
          type: string
        middleNameOfVictim:
          type: string
        emailOfVictim:
          type: string
        phoneNumberOfVictim:
          type: string
        victimAgegroup:
          type: string
        genderOfVictim:
          type: string
          enum:
            - Male
            - Female
        residentialAddressOfVictim:
          type: string
        addressLandmark:
          type: string
        lgaOfVictim:
          type: string
        stateOfVictim:
          type: string
        countryOfVictim:
          type: string
        victimOccupation:
          type: string
        victimOrganizationType:
          type: string
          enum:
            - Government
            - NGO
            - Private
            - Self Employed
            - Others
            - Unknown
        victimOrganizationID:
          "$ref": "#/components/schemas/Organization"
        victimOrganizationName:
          type: string
        otherDetailsOfVictim:
          type: string
        addedBy:
          type: string
        disabilityStatus:
          type: string
        religion:
          type: string
        relationshipWithVictim:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseWitness:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseWitnessID:
          type: string
        caseID:
          "$ref": "#/components/schemas/Case"
        firstNameOfWitness:
          type: string
        lastNameOfWitness:
          type: string
        middleNameOfWitness:
          type: string
        emailOfWitness:
          type: string
          uniqueItems: true
        phoneNumberOfWitness:
          type: string
        witnessAgegroup:
          type: string
        genderOfWitness:
          type: string
          enum:
            - Male
            - Female
        residentialAddressOfWitness:
          type: string
        addressLandmark:
          type: string
        lgaOfWitness:
          type: string
        stateOfWitness:
          type: string
        countryOfWitness:
          type: string
        witnessOccupation:
          type: string
        witnessOrganizationType:
          type: string
          enum:
            - Government
            - NGO
            - Private
            - Self Employed
            - Others
            - Unknown
        witnessOrganizationID:
          "$ref": "#/components/schemas/Organization"
        witnessOrganizationName:
          type: string
        otherDetailsOfWitness:
          type: string
        addedBy:
          type: string
        disabilityStatus:
          type: string
        religion:
          type: string
        relationshipWithVictim:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    FollowCase:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        followCaseID:
          type: string
          format: uuid
        caseID:
          "$ref": "#/components/schemas/Case"
        publicUserId:
          "$ref": "#/components/schemas/PublicUser"
        followStatus:
          type: string
          enum:
            - following
            - notFollowing
          default: notFollowing
    Organization:
      additionalProperties: false
      type: object
      required:
        - orgName
        - emails
        - address
        - addressLandmark
        - phones
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        orgID:
          type: string
          format: uuid
          readOnly: true
        orgName:
          type: string
        orgType:
          type: string
          enum:
            - Government
            - NGO
            - Private
            - Others
        description:
          type: string
        emails:
          type: array
          items:
            type: string
            format: email;
        address:
          type: string
        addressLandmark:
          type: string
        phones:
          type: array
          items:
            type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        cacRegNo:
          type: string
        orgStatus:
          type: string
        addedBy:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    PartnerBranch:
      type: object
      required:
        - branchName
        - address
      properties:
        _id:
          type: string
          readOnly: true
        partnerID:
          allOf:
            - "$ref": "#/components/schemas/Organization"
          readOnly: true
        branchName:
          type: string
        address:
          type: string
        ward:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Contact:
      type: object
      required:
        - email
        - subject
        - message
        - senderName
      properties:
        ticketID:
          type: string
          readOnly: true
        senderName:
          type: string
        phoneNumber:
          type: string
        email:
          type: string
          format: email
        subject:
          type: string
        message:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true

