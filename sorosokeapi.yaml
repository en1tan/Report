openapi: 3.0.0
info:
  title: "Sorosoke API"
  description: "API Server for SorosokeAPI"
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/v1
    description: "Local Server"
  - url: https://#
    description: "Production Server"

paths:
  /user/signup:
    post:
      operationId: signup
      summary: "Register new user"
      tags: ["User"]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicUser"
      responses:
        "201":
          description: "User registered"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        $ref: "#/components/schemas/PublicUser"
  /user/login:
    post:
      operationId: login
      summary: "Login user"
      tags: ["User"]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "201":
          description: "User autorized"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        $ref: "#/components/schemas/PublicUser"

components:
  schemas:
    PublicUser:
      type: object
      required:
        [
          firstName,
          lastName,
          userName,
          email,
          phoneNumber,
          password,
          address,
        ]
      properties:
        _id:
          type: string
          readOnly: true
        userID:
          type: string
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        userName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        userAgegroup:
          type: string
        gender:
          type: string
          enum: ["Male", "Female"]
        userType:
          type: string
          enum: ["user", "admin"]
          default: user
          readOnly: true
        address:
          type: string
        addressLandmark:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        avatar:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        onlineStatus:
          type: string
          enum: ["online", "offline"]
          readOnly: true
          default: offline
        active:
          type: boolean
          default: true
          readOnly: true
        disabilityStatus:
          type: string
        religion:
          type: string

  responses:
    NotFound:
      description: ""
      content:
        application/json:
          schema:
            type: string
