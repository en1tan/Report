openapi: 3.0.0
info:
  version: 1.0.0
  title: SorosokeAPI Server
  description: API Server for SorosokeAPI
servers:
  - url: https://sorosokeapi.onrender.com/api/v1
    description: Production Server
  - url: http://localhost:5000/api/v1
    description: Local Server
paths:
  /user/signup:
    post:
      summary: Register new user
      tags: [User]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicUser"
            example:
              firstName: Soroke
              middleName: ""
              lastName: User
              userName: sorosoke
              email: user@sorosoke.com
              phoneNumber: "08012345678"
              gender: Female
              address: 1, Sorosoke Av.
              addressLandmark: ""
              password: sorosokeWere@1
              userAgeGroup: 20-90
              lga: ""
              state: ""
              country: ""
              avatar: ""
              disabilityStatus: ""
              religion: ""
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        $ref: "#/components/schemas/PublicUser"
                    example:
                      message: User succesfully created
                      status: success
                      data:
                        user:
                          onlineStatus: offline
                          active: true
                          _id: 60b008fa9c946258111c7271
                          firstName: Soroke
                          lastName: User
                          userName: sorosoke
                          email: user1@sorosoke.com
                          phoneNumber: "08012345678"
                          gender: Female
                          address: 1, Sorosoke Av.
                          userAgeGroup: 20-90
                          userID: 9044502255
                          createdAt: "2021-05-27T21:02:50.182Z"
                          updatedAt: "2021-05-27T21:02:50.182Z"
                          __v: 0
        400:
          description: ""
          content:
            application/json:
              schema:
                $ref: "#/components/responses/400"
  /user/login:
    post:
      summary: Login user
      tags: [User]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              properties:
                userName:
                  type: string
                password:
                  type: string
                  format: password
              example:
                userName: sorosoke
                password: sorosokeWere@1

      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        $ref: "#/components/schemas/PublicUser"
                example:
                  message: User Authorized
                  status: success
                  data:
                    token: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjAwOGZhOWM5NDYyNTgxMTFjNzI3MSIsImlhdCI6MTYyMjE1MDk5NSwiZXhwIjoxNjIyMjM3Mzk1fQ.d488_F5G7Bc--nbcBKnk7AcCHb0iesYxXhaMN8gZ6ZY
                    user:
                      onlineStatus: online
                      active: true
                      _id: 60b008fa9c946258111c7271
                      firstName: Soroke
                      lastName: User
                      userName: sorosoke
                      email: user1@sorosoke.com
                      phoneNumber: "08012345678"
                      gender: Female
                      address: "1, Sorosoke Av."
                      userAgeGroup: 20-90
                      userID: "9044502255"
                      createdAt: "2021-05-27T21:02:50.182Z"
                      updatedAt: "2021-05-27T21:29:27.976Z"
                      __v: 0
  /user/profile:
    get:
      security:
        - bearerAuth: []
      summary: User profile
      tags: [User]
      description: ""
      responses:
        200:
          description: User details
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/PublicUser"
                example:
                  message: User details
                  status: success
                  data:
                    token: >-
                      eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwYjAwOGZhOWM5NDYyNTgxMTFjNzI3MSIsImlhdCI6MTYyMjE1MDk5NSwiZXhwIjoxNjIyMjM3Mzk1fQ.d488_F5G7Bc--nbcBKnk7AcCHb0iesYxXhaMN8gZ6ZY
                    user:
                      onlineStatus: online
                      active: true
                      _id: 60b008fa9c946258111c7271
                      firstName: Soroke
                      lastName: User
                      userName: sorosoke
                      email: user1@sorosoke.com
                      phoneNumber: "08012345678"
                      gender: Female
                      address: "1, Sorosoke Av."
                      userAgeGroup: 20-90
                      userID: "9044502255"
                      createdAt: "2021-05-27T21:02:50.182Z"
                      updatedAt: "2021-05-27T21:29:27.976Z"
                      __v: 0
  /user/account:
    patch:
      security:
        - bearerAuth: []
      summary: "Update user details"
      tags: [User]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PublicUser"
            example:
              firstName: string
              lastName: string
              middleName: string
              email: user@example.com
              phoneNumber: string
              userAgeGroup: string
              gender: Male
              address: string
              addressLandmark: string
              lga: string
              state: string
              country: string
              avatar: string
              disabilityStatus: string
              religion: string

      responses:
        "200":
          description: "Updated user details"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/PublicUser"
                example:
                  firstName: Soroke
                  lastName: User
                  userName: sorosoke
                  email: user@sorosoke.com
                  phoneNumber: "08012345678"
                  gender: Female
                  address: 1, Sorosoke Av.
                  password: sorosokeWere@1
                  confirmPassword: sorosokeWere@1
                  userAgeGroup: 20-90

  /partner/{id}/users:
    get:
      summary: Get all partner users
      description: Returns all users of a partner organization
      tags: ["Partner Organization"]
      security:
        - bearerAuth: []
      parameters:
        - description: The partner organization id
          in: path
          name: id
          schema:
            type: string
          example: 60b01f6b669e34779cd05ab5
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    staffs:
                      type: array
                      items:
                        $ref: "#/components/schemas/PartnerUser"
                    total:
                      type: integer
                    page:
                      type: integer
              example:
                status: success
                message: all partner users
                data:
                  staffs:
                    _id: 60b190ea4cf0765bb8369faa
                    partnerID: 60b01f6b669e34779cd05ab5
                    firstName: Verifier
                    lastName: Sorosoke
                    userName: verifier
                    gender: "Male"
                    email: verifier@sorosoke.com
                    phoneNumber: "07032165498"
                    userType: verifier
                    address: "12, Verifier Ar."
                    stateOfAssignment: "Abuja"
                    password: verifierWere@2
                    onlineStatus: online
                    active: true
                    userID: yXp5efQVTF
                    createdAt: "2021-05-29T00:55:06.510Z"
                    updatedAt: "2021-05-29T00:55:06.510Z"
                    __v: 0
                  total: 1
                  page: 1
  /partner/user/{id}/update:
    patch:
      security:
        - bearerAuth: []
      summary: Update partner user details
      tags: ["Partner Organization"]
      description: "userTypes:['admin']"
      parameters:
        - description: partner user id
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b190ea4cf0765bb8369faa
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerUser"
            example:
              userType: verifier
              stateOfAssignment: ""
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/PartnerUser"
              example:
                status: success
                message: partner user updated succesfully
                data:
                  _id: 60b190ea4cf0765bb8369faa
                  partnerID: 60b01f6b669e34779cd05ab5
                  firstName: Verifier
                  lastName: Sorosoke
                  userName: verifier
                  gender: "Male"
                  email: verifier@sorosoke.com
                  phoneNumber: "07032165498"
                  userType: verifier
                  address: "12, Verifier Ar."
                  stateOfAssignment: "Abuja"
                  password: verifierWere@2
                  onlineStatus: online
                  active: true
                  userID: yXp5efQVTF
                  createdAt: "2021-05-29T00:55:06.510Z"
                  updatedAt: "2021-05-29T00:55:06.510Z"
                  __v: 0
  /partner/user/{id}:
    delete:
      security:
        - bearerAuth: []
      summary: delete partner user
      description: "userTypes: [super-admin,admin]"
      tags: ["Partner Organization", "Super Admin"]
      parameters:
        - description: partner user id
          in: path
          required: true
          name: id
          schema:
            type: string
          example: 60b190ea4cf0765bb8369faa
      responses:
        200:
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: partner user deleted succesfully
  /partner/signup:
    post:
      summary: Add partner account
      tags: [Partner User]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerUser"
            example:
              partnerID: 60b01f6b669e34779cd05ab5
              firstName: Verifier
              lastName: Sorosoke
              userName: verifier
              gender: "Male"
              email: verifier@sorosoke.com
              phoneNumber: "07032165498"
              userType: verifier
              address: "12, Verifier Ar."
              stateOfAssignment: "Abuja"
              password: verifierWere@2
              confirmPassword: verifierWere@2
      responses:
        "201":
          description: Partner user added
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        $ref: "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user succesfully created
                data:
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI..."
                  user:
                    _id: 60b190ea4cf0765bb8369faa
                    partnerID: 60b01f6b669e34779cd05ab5
                    firstName: Verifier
                    lastName: Sorosoke
                    userName: verifier
                    gender: "Male"
                    email: verifier@sorosoke.com
                    phoneNumber: "07032165498"
                    userType: verifier
                    address: "12, Verifier Ar."
                    stateOfAssignment: "Abuja"
                    password: verifierWere@2
                    onlineStatus: offline
                    active: true
                    userID: yXp5efQVTF
                    createdAt: "2021-05-29T00:55:06.510Z"
                    updatedAt: "2021-05-29T00:55:06.510Z"
                    __v: 0
  /partner/login:
    post:
      summary: "Login partner user"
      tags: ["Partner User"]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
            examples:
              superadmin:
                summary: superadmin login
                value:
                  email: superadmin@sorosoke.com
                  password: superadminWere@2
              admin:
                summary: admin login
                value:
                  email: admin@sorosoke.com
                  password: adminWere@2
              staff:
                summary: staff login
                value:
                  email: staff@sorosoke.com
                  password: staffWere@2
              verifier:
                summary: verifier login
                value:
                  email: verifier@sorosoke.com
                  password: verifierWere@2
      responses:
        "200":
          description: "User authorized"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                      user:
                        $ref: "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user authorized
                data:
                  token: "eyJhbGciOiJIUzI1NiIsInR5cCI..."
                  user:
                    _id: 60b190ea4cf0765bb8369faa
                    partnerID: 60b01f6b669e34779cd05ab5
                    firstName: Verifier
                    lastName: Sorosoke
                    userName: verifier
                    gender: "Male"
                    email: verifier@sorosoke.com
                    phoneNumber: "07032165498"
                    userType: verifier
                    address: "12, Verifier Ar."
                    stateOfAssignment: "Abuja"
                    password: verifierWere@2
                    onlineStatus: online
                    active: true
                    userID: yXp5efQVTF
                    createdAt: "2021-05-29T00:55:06.510Z"
                    updatedAt: "2021-05-29T00:55:06.510Z"
                    __v: 0

  /partner/profile:
    get:
      security:
        - bearerAuth: []
      summary: "Get partner profile"
      tags: ["Partner User"]
      description: ""
      responses:
        "200":
          description: "Partner user details"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user details
                data:
                  _id: 60b190ea4cf0765bb8369faa
                  partnerID: 60b01f6b669e34779cd05ab5
                  firstName: Verifier
                  lastName: Sorosoke
                  userName: verifier
                  gender: "Male"
                  email: verifier@sorosoke.com
                  phoneNumber: "07032165498"
                  userType: verifier
                  address: "12, Verifier Ar."
                  stateOfAssignment: "Abuja"
                  password: verifierWere@2
                  onlineStatus: online
                  active: true
                  userID: yXp5efQVTF
                  createdAt: "2021-05-29T00:55:06.510Z"
                  updatedAt: "2021-05-29T00:55:06.510Z"
                  __v: 0
  /partner/account:
    patch:
      security:
        - bearerAuth: []
      summary: "Update partner user details"
      tags: ["Partner User"]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerUser"
            example:
              phoneNumber: "09064558523"
              firstName: ""
              lastName: ""
              middleName: ""
              dob: ""
              gender: ""
              address: ""
              lga: ""
              state: ""
              country: ""
              avatar: ""
              password: ""
              disabilityStatus: ""
              religion: ""
      responses:
        200:
          description: "Updated partner user details"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/PartnerUser"
              example:
                status: success
                message: user details
                data:
                  _id: 60b190ea4cf0765bb8369faa
                  partnerID: 60b01f6b669e34779cd05ab5
                  firstName: Verifier
                  lastName: Sorosoke
                  userName: verifier
                  gender: "Male"
                  email: verifier@sorosoke.com
                  phoneNumber: "07032165498"
                  userType: verifier
                  address: "12, Verifier Ar."
                  stateOfAssignment: "Abuja"
                  password: verifierWere@2
                  onlineStatus: online
                  active: true
                  userID: yXp5efQVTF
                  createdAt: "2021-05-29T00:55:06.510Z"
                  updatedAt: "2021-05-29T00:55:06.510Z"
                  __v: 0
  /case/create:
    post:
      security:
        - bearerAuth: []
      summary: Create a case report
      tags: ["Case"]
      description: ""
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Case"
            example:
              dateOfIncident: "2021-05-29T21:21:57.922Z"
              categoryGroupID: 60b2b051f4ff133eeaaaca1a
              caseCategories: 60a1ccb70a71ff3510d288b3,60a1ccb70a71ff3510d288b3,60a1ccb70a71ff3510d288b3
              state: Abuja
              addressOfIncident: Gatara
              areYouTheVictim: Yes
              reportType: Standard
              country: Nigeria
              descriptionOfIncident: A friend got swatted
              lga: ""
              casePleas: ""
              tags: ""
              hourOfIncident: ""
      responses:
        201:
          description: "Case reported successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Case"
              example:
                message: Case Created Succesfully
                status: success
                data:
                  case:
                    _id: 60b2b1c551929b3f8b7a7e83
                    caseID: SCSE64407
                    __v: 0

  /public/cases:
    get:
      summary: "Get all cases"
      tags: ["Public"]
      parameters:
        - description: "Filter by Resolution Status"
          in: query
          name: resolutionStatus
          schema:
            type: string
            enum: [resolved, unresolved]
        - description: Filter by Case Type Status
          in: query
          name: caseTypeStatus
          schema:
            type: string
            enum: [unResolved, resolved]
        - description: Filter by state
          in: query
          name: state
          schema:
            type: string
        - description: filter by local government area
          in: query
          name: lga
          schema:
            type: string
        - description: "Filter by Report Type"
          in: query
          name: reportType
          schema:
            type: string
            enum: [Standard, QuickReport]
        - description: "Page"
          in: query
          name: page
          example: 1
          schema:
            type: integer
        - description: "Limit"
          in: query
          name: limit
          example: 20
          schema:
            type: integer
      responses:
        200:
          description: "All cases fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      cases:
                        type: array
                        items:
                          $ref: "#/components/schemas/Case"
                      total:
                        type: integer
                      page:
                        type: integer
              example:
                message: Cases Fetched Succesfully
                status: success
                data:
                  cases:
                    - _id: 60b2b1c551929b3f8b7a7e83
                      caseTitle: Swatted
                      caseAvatar: "https://via.placeholder.com/150"
                      caseSummary: Swaatted
                      resolutionStatus: unResolved
                      categoryGroupID: 60b2b051f4ff133eeaaaca1a
                      publishedBy: 304nv0n0493n220230
                      datePublished: "2021-05-27T20:04:58.743Z"
                      createdAt: "2021-05-27T20:04:58.743Z"
                      __v: 0
                  total: 1
                  page: 1

  /case:
    get:
      security:
        - partnerBearerAuth: []
      summary: "Get all cases"
      tags: ["Case"]
      parameters:
        - description: "Filter by Resolution Status"
          in: query
          name: resolutionStatus
          schema:
            type: string
            enum: [unresolved, resolved, onlyReport]
        - description: "Filter by Verification Status"
          in: query
          name: verificationStatus
          schema:
            type: string
            enum: [unVerified, verified]
        - description: "Filter by Platform of Report"
          in: query
          name: platformOfReport
          schema:
            type: string
            enum: [web, mobile, sms]
        - description: "Filter by Published status"
          in: query
          name: publishStatus
          schema:
            type: string
            enum: [unPublished, published]
        - description: "Filter by Report Type"
          in: query
          name: reportType
          schema:
            type: string
            enum: [Standard, QuickReport]
        - description: "Filter by Case Type Status"
          in: query
          name: caseTypeStatus
          schema:
            type: string
            enum: [Incidence, Case, QuickReport]
        - description: "Page"
          in: query
          name: page
          example: 1
          schema:
            type: integer
        - description: "Limit"
          in: query
          name: limit
          example: 20
          schema:
            type: integer
      responses:
        "200":
          description: "All cases fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      cases:
                        type: array
                        items:
                          $ref: "#/components/schemas/Case"
                      total:
                        type: integer
                      page:
                        type: integer
              example:
                message: Cases Fetched Succesfully
                status: success
                data:
                  cases:
                    - _id: 60b2b1c551929b3f8b7a7e83
                      caseID: SCSE44766
                      caseTitle: NotYetAssigned
                      dateOfIncident: "2021-05-29T21:21:57.922Z"
                      caseTypeStatus: Incidence
                      publishStatus: unPublished
                      resolutionStatus: unResolved
                      verificationStatus: unVerified
                      platformOfReport: web
                      categoryID: 60b2b051f4ff133eeaaaca1a
                      addressOfIncident: Gatara
                      state: Abuja
                      reportType: Standard
                      publicUserID: 60b0050a1416ba54d2af818b
                      createdAt: "202a1-05-29T21:27:33.145Z"
                      updatedAt: "2021-05-29T21:27:33.145Z"
                      __v: 0
                  total: 1
                  page: 1
  /case/{id}:
    get:
      security:
        - partnerBearerAuth: []
      summary: "Get a case"
      tags: ["Case"]
      parameters:
        - description: "Case id"
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      responses:
        "200":
          description: "Case fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Case"
              example:
                status: success
                message: Case Fetched Succesfully
                case:
                  _id: 60b2b1c551929b3f8b7a7e83
                  caseID: SCSE44766
                  caseTitle: NotYetAssigned
                  dateOfIncident: "2021-05-29T21:21:57.922Z"
                  areYouTheVictim: "Yes"
                  caseTypeStatus: Incidence
                  publishStatus: unPublished
                  resolutionStatus: unResolved
                  verificationStatus: unVerified
                  platformOfReport: web
                  categoryID: 60b2b051f4ff133eeaaaca1a
                  addressOfIncident: Gatara
                  state: Abuja
                  reportType: Standard
                  publicUserID: 60b0050a1416ba54d2af818b
                  createdAt: "2021-05-29T21:27:33.145Z"
                  updatedAt: "2021-05-29T21:27:33.145Z"
                  __v: 0
  /case/{id}/verify:
    patch:
      security:
        - bearerAuth: []
      summary: "Verify a case"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              properties:
                verificationStatus:
                  type: string
            example:
              verificationStatus: verified
      responses:
        200:
          description: "Case verified"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Case"
              example:
                status: success
                message: Case verified
                case:
                  _id: 60b2b1c551929b3f8b7a7e83
                  caseTitle: NotYetAssigned
                  dateOfIncident: "2021-05-29T21:21:57.922Z"
                  caseTypeStatus: Incidence
                  publishStatus: unPublished
                  resolutionStatus: unResolved
                  verificationStatus: verified
                  platformOfReport: web
                  categoryID: 60b2b051f4ff133eeaaaca1a
                  addressOfIncident: Gatara
                  state: Abuja
                  reportType: Standard
                  publicUserID: 60b0050a1416ba54d2af818b
                  createdAt: "2021-05-29T21:27:33.145Z"
                  updatedAt: "2021-05-29T21:27:33.145Z"
                  caseID: SCSE44766
                  __v: 0
  /case/{id}/assign:
    patch:
      security:
        - bearerAuth: []
      summary: "Assign a case to a partner"
      tags: ["Case"]
      parameters:
        - description: "Case id"
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerUser"
            example:
              assignedPartnerUserId: 60b180282525d74ce37cbd84
      responses:
        "200":
          description: "Case assigned"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Case"
              example:
                _id: 60b2b1c551929b3f8b7a7e83
                caseTitle: NotYetAssigned
                dateOfIncident: "2021-05-29T21:21:57.922Z"
                caseTypeStatus: Incidence
                publishStatus: unPublished
                resolutionStatus: unResolved
                verificationStatus: verified
                platformOfReport: web
                categoryID: 60b2b051f4ff133eeaaaca1a
                addressOfIncident: Gatara
                state: Abuja
                reportType: Standard
                publicUserID: 60b0050a1416ba54d2af818b
                assignedPartnerUserId: 60b180282525d74ce37cbd84
                createdAt: "2021-05-29T21:27:33.145Z"
                updatedAt: "2021-05-29T21:27:33.145Z"
                caseID: SCSE44766
                __v: 0

  /case/{id}/publish:
    patch:
      security:
        - bearerAuth: []
      summary: "Publish case"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              properties:
                publishStatus:
                  type: string
            example:
              publishStatus: published
      responses:
        "200":
          description: "Case published"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Case"
              example:
                _id: 60b2b1c551929b3f8b7a7e83
                caseTitle: NotYetAssigned
                dateOfIncident: "2021-05-29T21:21:57.922Z"
                caseTypeStatus: Incidence
                publishStatus: published
                resolutionStatus: unResolved
                verificationStatus: verified
                platformOfReport: web
                categoryID: 60b2b051f4ff133eeaaaca1a
                publishedBy: 60b180282525d74ce37cbd84
                addressOfIncident: Gatara
                state: Abuja
                reportType: Standard
                publicUserID: 60b0050a1416ba54d2af818b
                createdAt: "2021-05-29T21:27:33.145Z"
                updatedAt: "2021-05-29T21:27:33.145Z"
                caseID: SCSE44766
                __v: 0

  /case/{id}/resolve:
    patch:
      security:
        - bearerAuth: []
      summary: "Resolve case"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: id
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              properties:
                resolutionStatus:
                  type: string
            examples:
              resolved:
                summary: mark as resolved
                value:
                  resolutionStatus: resolved
      responses:
        "200":
          description: "Case resolved/unresolved"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/Case"
              example:
                _id: 60b2b1c551929b3f8b7a7e83
                caseTitle: NotYetAssigned
                dateOfIncident: "2021-05-29T21:21:57.922Z"
                caseTypeStatus: Incidence
                publishStatus: published
                resolutionStatus: resolved
                verificationStatus: verified
                platformOfReport: web
                categoryID: 60b2b051f4ff133eeaaaca1a
                publishedBy: 60b180282525d74ce37cbd84
                addressOfIncident: Gatara
                state: Abuja
                reportType: Standard
                publicUserID: 60b0050a1416ba54d2af818b
                createdAt: "2021-05-29T21:27:33.145Z"
                updatedAt: "2021-05-29T21:27:33.145Z"
                caseID: SCSE44766
                __v: 0
  /case/personal:
    get:
      security:
        - bearerAuth: []
      summary: "Fetch all personal cases"
      tags: ["Case", "User"]
      responses:
        "200":
          description: "Case fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    cases:
                      type: array
                      items:
                        $ref: "#/components/schemas/Case"
                    total:
                      type: integer
                    page:
                      type: integer
              example:
                status: success
                message: Fetched Personal Cases
                cases:
                  - _id: 60b2b1c551929b3f8b7a7e83
                    caseAvatar: ""
                    categoryGroupID: 60b2b051f4ff133eeaaaca1a
                    descripionOfIncident: ""
                    assignedPartnerID: ""
                    caseID: SCSE44766
                    __v: 0
  /case/{id}/follow:
    patch:
      security:
        - bearerAuth: []
      summary: "Follow/Unfollow Case case"
      tags: ["Case", "User"]
      parameters:
        - description: "Case ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              properties:
                followStatus:
                  type: string
                  enum: [follow, unfollow]
            examples:
              follow:
                summary: follow a case
                value:
                  followStatus: follow
              unfollow:
                summary: unfollow a case
                value:
                  followStatus: unfollow
      responses:
        "200":
          description: "Case Followed/Unfollowed"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
              example:
                status: success
                message: case followed successfully
  /case/followed:
    get:
      security:
        - bearerAuth: []
      summary: "Get all followed cases"
      tags: ["Case", "User"]
      parameters:
        - description: "Page"
          in: query
          name: page
          schema:
            type: integer
          example: 1
        - description: "Limit"
          in: query
          name: limit
          schema:
            type: integer
          example: 20
      responses:
        "200":
          description: "Cases fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    cases:
                      type: array
                      items:
                        $ref: "#/components/schemas/Case"
              example:
                status: success
                message: Cases Fetched Succesfully
                data:
                  cases:
                    - _id: 60b2b1c551929b3f8b7a7e83
                      dateOfIncident: "2021-05-29T21:21:57.922Z"
                      categoryGroupID: 60b2b051f4ff133eeaaaca1a
                      publishedBy: 60b180282525d74ce37cbd84
                      datePublished: "2021-05-29T21:27:33.145Z"
                total: 1
                page: 1
  /case/create/{caseID}/caseVictim:
    post:
      security:
        - bearerAuth: []
      summary: "Add case victim"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseID
          required: true
          schema:
            type: string
          example: 60b2b1c551929b3f8b7a7e83
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseVictim"
            example:
              firstNameOfVictim: John
              lastNameOfVictim: Doe
              emailOfVictim: johndoe@vict.com
              phoneNumberOfVictim: "08035468521"
              genderOfVictim: Male
              residentialAddressOfVictim: 12, Vitc Cl.
              relationshipWithVictim: Friend
              middleNameOfVictim: ""
              addressLandmark: ""
              lgaOfVictim: ""
              stateOfVictim: ""
              countryOfVictim: ""
              victimOccupation: ""
              victimOrganizationType: "Private"
              victimOrganizationName: ""
              otherDetailsOfVictim: ""
              disabilityStatus: ""
              religion: ""
      responses:
        "201":
          description: "Victim added successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      victim:
                        $ref: "#/components/schemas/CaseVictim"
              example:
                status: success
                message: Victim Created Succesfully
                data:
                  victim:
                    _id: 60b417bced9c8c3106ecc3fa
                    firstNameOfVictim: John
                    lastNameOfVictim: Doe
                    emailOfVictim: johndoe@vict.com
                    phoneNumberOfVictim: "08035468521"
                    genderOfVictim: Male
                    residentialAddressOfVictim: "12, Vitc Cl."
                    relationshipWithVictim: Friend
                    caseID: 60b417a0ed9c8c3106ecc3f9
                    createdAt: "2021-05-30T22:54:52.960Z"
                    updatedAt: "2021-05-30T22:54:52.960Z"
                    caseVictimID: SCEV56754
                    __v: 0

  /case/create/{caseID}/caseSuspect:
    post:
      security:
        - bearerAuth: []
      summary: "Add case suspect"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseSuspect"
            example:
              firstNameOfSuspect: Jonas
              lastNameOfSuspect: Phils
              emailOfSuspect: jonesphlias@email.com
              phoneNumberOfSuspect: "08035468521"
              genderOfSuspect: Female
              residentialAddressOfSuspect: "91, Sus Ln."
      responses:
        "201":
          description: "Suspect added successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      suspect:
                        $ref: "#/components/schemas/CaseSuspect"
              example:
                status: success
                message: Suspect Created Succesfully
                data:
                  suspect:
                    guiltStatus: Not-guilty
                    _id: 60b41db683f4b35cf57e2027
                    firstNameOfSuspect: Jonas
                    lastNameOfSuspect: Phils
                    emailOfSuspect: jonesphlias@email.com
                    phoneNumberOfSuspect: "08035468521"
                    genderOfSuspect: Female
                    residentialAddressOfSuspect: "91, Sus Ln."
                    caseID: 60b417a0ed9c8c3106ecc3f9
                    createdAt: "2021-05-30T23:20:22.559Z"
                    updatedAt: "2021-05-30T23:20:22.559Z"
                    caseSuspectID: SCES10220
                    __v: 0
  /case/create/{caseID}/caseWitness:
    post:
      security:
        - bearerAuth: []
      summary: "Add case witness"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseWitness"
            example:
              firstNameOfWitness: Witney
              lastNameOfWitness: Hostin
              emailOfWitness: witty@whie.com
              phoneNumberOfWitness: ;'07608547896'
              genderOfWitness: Female
              residentialAddressOfWitness: Witty Cr.
      responses:
        "201":
          description: "Witness added successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      suspect:
                        $ref: "#/components/schemas/CaseWitness"
              example:
                message: Witness Created Succesfully
                status: success
                data:
                  witness:
                    _id: 60b42200adf18d5fe4e22eae
                    firstNameOfWitness: Witney
                    lastNameOfWitness: Hostin
                    emailOfWitness: witty@whie.com
                    phoneNumberOfWitness: ;'07608547896'
                    genderOfWitness: Female
                    residentialAddressOfWitness: Witty Cr.
                    caseID: 60b2b1c551929b3f8b7a7e83
                    createdAt: "2021-05-30T23:38:40.155Z"
                    updatedAt: "2021-05-30T23:38:40.155Z"
                    caseWitnessID: SCEW46404
                    __v: 0
  /case/create/{caseID}/otherDetails:
    post:
      security:
        - bearerAuth: []
      summary: "Add case other details"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseID
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseOtherDetails"
      responses:
        "201":
          description: "Other details added successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      suspect:
                        $ref: "#/components/schemas/CaseOtherDetails"
  /case/create/{id}/evidence:
    post:
      security:
        - bearerAuth: []
      summary: "Add case evidence"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: array
                  items:
                    type: string
                    format: binary
                URL:
                  type: string
      responses:
        "201":
          description: "Case evidence added successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /case/edit/{id}/evidence:
    patch:
      security:
        - bearerAuth: []
      summary: "Edit case evidence"
      tags: ["Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseEvidence"
      responses:
        "200":
          description: "Case evidence edited successfully"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      case:
                        $ref: "#/components/schemas/Case"

  /case/category/groups:
    get:
      security:
        - bearerAuth: []
      summary: "Get all category groups"
      tags: ["Public", "Category Group"]
      responses:
        "200":
          description: "Category groups fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      groups:
                        $ref: "#/components/schemas/CaseCategoryGroup"
              example:
                status: success
                message: Case Category Groups Fetched
                data:
                  groups:
                    - _id: 60affb6a3dc1114794a4cb64
                      groupName: "Human Rights"
                      description: "Human Rights"
                      createdAt: "2021-05-27T20:04:58.743Z"
                      updatedAt: "2021-05-27T20:04:58.743Z"
                      categoryGroupID: "SGRP72360"
                      _v: 0

  /case/category/group/create:
    post:
      security:
        - bearerAuth: []
      summary: "Add case category group"
      description: "userTypes: ['super-admin','admin']"
      tags: ["Category Group"]
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                groupName:
                  type: string
                description:
                  type: string
      responses:
        "201":
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      group:
                        $ref: "#/components/schemas/CaseCategoryGroup"
              example:
                status: "success"
                message: "Case Group Created Successfully"
                data:
                  group:
                    _id: 60affb6a3dc1114794a4cb64
                    groupName: "Human Rights"
                    description: "Human Rights"
                    createdAt: "2021-05-27T20:04:58.743Z"
                    updatedAt: "2021-05-27T20:04:58.743Z"
                    categoryGroupID: "SGRP72360"
                    _v: 0
  /case/category/group/{id}/update:
    patch:
      security:
        - bearerAuth: []
      parameters:
        - description: "Group ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      tags: ["Category Group"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseCategoryGroup"
      responses:
        "200":
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/CaseCategoryGroup"
                example:
                  status: "success"
                  message: "Case Group updated successfully"
                  data:
                    group:
                      _id: 60affb6a3dc1114794a4cb64
                      groupName: "Human Rights"
                      description: "Human Rights"
                      createdAt: "2021-05-27T20:04:58.743Z"
                      updatedAt: "2021-05-27T20:04:58.743Z"
                      categoryGroupID: "SGRP72360"
  /case/category/group/{id}:
    delete:
      summary: delete category group
      security:
        - bearerAuth: []
      tags: ["Category Group"]
      parameters:
        - description: "Group ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "Group deleted"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string

  /case/category/{groupID}/categories:
    get:
      security:
        - bearerAuth: []
      summary: "Get all categories"
      tags: ["Public", "Category"]
      parameters:
        - description: group ID
          in: path
          required: true
          name: groupID
          schema:
            type: string
      responses:
        "200":
          description: "Category groups fetched"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/CaseCategory"
  /case/category/group/{id}/create:
    post:
      security:
        - bearerAuth: []
      summary: "Add case category"
      tags: ["Category"]
      parameters:
        - description: "Group ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseCategory"
      responses:
        "201":
          description: "Category created"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      group:
                        $ref: "#/components/schemas/CaseCategory"
  /case/category/{id}/update:
    patch:
      security:
        - bearerAuth: []
      parameters:
        - description: "Category ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      tags: ["Category"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseCategory"
      responses:
        "200":
          description: "Carwgory edited"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    $ref: "#/components/schemas/CaseCategory"
  /case/category/{id}:
    delete:
      security:
        - bearerAuth: []
      tags: ["Category"]
      parameters:
        - description: "Category ID"
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "deleted category"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
  /comment/create/{caseId}:
    post:
      security:
        - bearerAuth: []
      summary: "Comment on a case"
      tags: ["Misc"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseComment"
      responses:
        "201":
          description: "Comment added"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      comment:
                        $ref: "#/components/schemas/CaseComment"
  /contact/create:
    post:
      security:
        - bearerAuth: []
      summary: "Request contact details"
      tags: ["Misc"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Contact"
      responses:
        "201":
          description: "Contact details requested"
          content:
            "*/*":
              schema:
                $ref: "#/components/schemas/Contact"
  /partner/create:
    post:
      security:
        - bearerAuth: []
      summary: "create partner details"
      tags: ["Super Admin"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Partner"
            example:
              organizationName: Sorosoke
              organizationType: NGO
              email: admin@sorosoke.com
              address: "1, Sorosoke Av."
              addressLandmark: Abuja
              phoneNumber: "07032165498"
              state: Abuja
              regNumber: 9MDWI89DKVNW90REVN
      responses:
        201:
          description: ""
          content:
            "application/json":
              schema:
                $ref: "#/components/schemas/Partner"
              example:
                message: Partner organization created
                status: success
                data:
                  organization:
                    _id: 60b01f6b669e34779cd05ab5
                    organizationName: Sorosoke
                    organizationType: NGO
                    email: admin@sorosoke.com
                    address: "1, Sorosoke Av."
                    phoneNumber: "07032165498"
                    state: Abuja
                    regNumber: 9MDWI89DKVNW90REVN
                    partnerID: xFirObp4P6
                    createdAt: "2021-05-28T23:44:59.568Z"
                    updatedAt: "2021-05-28T23:44:59.568Z"
                    __v: 0
  /partner/{id}/branch/create:
    post:
      security:
        - bearerAuth: []
      summary: create a branch of an organization
      description: "userTypes: [super-admin,admin]"
      tags: [Partner Organization]
      parameters:
        - description: partner organization id
          in: path
          required: true
          name: id
          schema:
            type: string
          example: 60b1807b2525d74ce37cbd85
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PartnerBranch"
            example:
              branchName: Buff Up Branch
              address: "2, Sorosoke Branch"
      responses:
        201:
          description: ""
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                $ref: "#/components/schemas/PartnerBranch"
              example:
                status: success
                message: branch created succesfully
                data:
                  _id: 60b18a394da9bb59766731f6
                  branchName: Buff Up Branch
                  partnerID: 60b1807b2525d74ce37cbd85
                  branchID: uGBVrYxOVH
                  createdAt: "2021-05-29T00:26:33.445Z"
                  updatedAt: "2021-05-29T00:26:33.445Z"
                  __v: 0
  /progress/create/{caseID}:
    post:
      security:
        - bearerAuth: []
      summary: "Add case progress"
      tags: ["Case Progress", "Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseProgress"
      responses:
        "201":
          description: "Case Progress added"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      progress:
                        $ref: "#/components/schemas/CaseProgress"
  /progress/upload/{progressId}:
    post:
      security:
        - bearerAuth: []
      summary: "Upload progress document"
      tags: ["Case", "Case Progress"]
      parameters:
        - description: "Progress ID"
          name: progressId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CaseProgressDoc"
      responses:
        "201":
          description: "Upload successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseProgressDoc"
  /details/create/{caseID}:
    post:
      security:
        - bearerAuth: []
      summary: "Add case other details"
      tags: ["Case Other Details", "Case"]
      parameters:
        - description: "Case ID"
          in: path
          name: caseId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaseOtherDetails"
      responses:
        "201":
          description: "Case Other details added"
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      progress:
                        $ref: "#/components/schemas/CaseOtherDetails"
  /progress/upload/{otherDetailsId}:
    post:
      security:
        - bearerAuth: []
      summary: "Upload other details document"
      tags: ["Case", "Case Other Details"]
      parameters:
        - description: "Progress ID"
          name: otherDetailsId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CaseOtherDetailsDoc"
      responses:
        "201":
          description: "Upload successful"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaseOtherDetailsDoc"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    partnerBearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    PublicUser:
      additionalProperties: false
      type: object
      required:
        [
          firstName,
          lastName,
          userName,
          email,
          phoneNumber,
          password,
          address,
        ]
      properties:
        _id:
          type: string
          readOnly: true
        userID:
          type: string
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        userName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        userAgeGroup:
          type: string
        gender:
          type: string
          enum: ["Male", "Female"]
        address:
          type: string
        addressLandmark:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        avatar:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        onlineStatus:
          type: string
          enum: ["online", "offline"]
          readOnly: true
          default: offline
        active:
          type: boolean
          default: true
          readOnly: true
        disabilityStatus:
          type: string
        religion:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Partner:
      additionalProperties: false
      type: object
      required:
        [organizationName, email, phoneNumber, address, regNumber]
      properties:
        _id:
          type: string
        organizationName:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        address:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        organizationType:
          type: string
          enum: ["Government", "NGO", "Private", "Others"]
        regNumber:
          type: string
        descriptionOfOrg:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true

    PartnerUser:
      additionalProperties: false
      type: object
      required:
        [
          firstName,
          lastName,
          userName,
          email,
          phoneNumber,
          password,
          address,
          stateOfAssignment,
          userType,
        ]
      properties:
        _id:
          type: string
          readOnly: true
        userID:
          type: string
          readOnly: true
        partnerID:
          type: string
        branchID:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        userName:
          type: string
        email:
          type: string
          format: email
        phoneNumber:
          type: string
        dob:
          type: string
          format: date-time
        gender:
          type: string
          enum: ["Male", "Female"]
        userType:
          type: string
          enum: ["super-admin", "admin", "staff", "verifier"]
          default: staff
        address:
          type: string
        lga:
          type: string
        stateOfAssignment:
          type: string
        country:
          type: string
        avatar:
          type: string
        password:
          type: string
          format: password
          writeOnly: true
        onlineStatus:
          type: string
          enum: ["online", "offline"]
          readOnly: true
          default: offline
        active:
          type: boolean
          default: true
          readOnly: true
        disabilityStatus:
          type: string
        religion:
          type: string
    Case:
      additionalProperties: false
      type: object
      required: [caseTitle, dateOfIncident]
      properties:
        _id:
          type: string
          readOnly: true
        caseID:
          type: string
          readOnly: true
        publicUserID:
          $ref: "#/components/schemas/PublicUser"
          readOnly: true
        categoryGroupID:
          $ref: "#/components/schemas/CaseCategory"
        assignedPartnerUserId:
          $ref: "#/components/schemas/PartnerUser"
          readOnly: true
        caseTitle:
          type: string
        addressOfIncident:
          type: string
        addressLandmark:
          type: string
        dateOfIncident:
          type: string
          format: date-time
        hourOfIncident:
          type: string
        country:
          type: string
        state:
          type: string
        lga:
          type: string
        descriptionOfIncident:
          type: string
        areYouTheVictim:
          type: string
          enum: ["Yes", "No"]
          default: "No"
        reportType:
          type: string
          enum: ["Standard", "QuickReport"]
        casePleas:
          type: string
        caseTypeStatus:
          type: string
          enum: ["Incidence", "Case", "QuickReport"]
          default: "Incidence"
        caseSummary:
          type: string
          readOnly: true
        publishStatus:
          type: string
          enum: ["published", "unPublished"]
          default: "unPublished"
          readOnly: true
        publishedBy:
          $ref: "#/components/schemas/PartnerUser"
        resolutionStatus:
          type: string
          enum: ["resolved", "unResolved", "onlyReport"]
          default: "unResolved"
          readOnly: true
        verificationStatus:
          type: string
          enum: ["verified", "unVerified", "onlyReport"]
          default: "unVerified"
          readOnly: true
        platformOfReport:
          type: string
          enum: ["mobile", "web", "sms"]
          default: "web"
        tags:
          type: string
        followedBy:
          readOnly: true
          type: array
          items:
            $ref: "#/components/schemas/PartnerUser"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseCategory:
      additionalProperties: false
      type: object
      required: [categoryName]
      properties:
        _id:
          type: string
        categoryID:
          type: string
        categoryGroupID:
          $ref: "#/components/schemas/CaseCategoryGroup"
        categoryName:
          type: string
        description:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseCategoryGroup:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          readOnly: true
        categoryGroupID:
          type: string
          readOnly: true
        groupName:
          type: string
        description:
          type: string
        imageIcon:
          type: string
          format: binary
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseComment:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseID:
          $ref: "#/components/schemas/Case"
        publicUserID:
          $ref: "#/components/schemas/PublicUser"
        comment:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseEvidence:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseID:
          $ref: "#/components/schemas/Case"
        fileName:
          type: string
        URL:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseOtherDetails:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        from:
          type: string
          enum: ["super-admin", "admin", "staff", "verifier", "user"]
        userID:
          type: string
          format: uuid
        message:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseOtherDetailsDoc:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        docID:
          type: string
          readOnly: true
        docTitle:
          type: string
        URL:
          type: string
          format: binary
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseProgress:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        progressID:
          type: string
          readOnly: true
        caseID:
          $ref: "#/components/schemas/Case"
        publicUserID:
          $ref: "#/components/schemas/PublicUser"
        partnerUserID:
          $ref: "#/components/schemas/PartnerUser"
        title:
          type: string
        message:
          type: string
        privacyStatus:
          type: string
          enum: ["public", "private"]
          default: "private"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseProgressDoc:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        docID:
          type: string
          readOnly: true
        caseProgressID:
          $ref: "#/components/schemas/CaseProgress"
        docTitle:
          type: string
        URL:
          type: string
          format: binary
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseSuspect:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseSuspectID:
          type: string
        caseID:
          $ref: "#/components/schemas/Case"
        firstNameOfSuspect:
          type: string
        lastNameOfSuspect:
          type: string
        middleNameOfSuspect:
          type: string
        emailOfSuspect:
          type: string
        phoneNumberOfSuspect:
          type: string
        suspectAgeGroup:
          type: string
        genderOfSuspect:
          type: string
          enum: ["Male", "Female"]
        guiltStatus:
          type: string
          enum: ["Guilty", "Not-guilty", "Accomplice"]
          default: "Not-guilty"
        residentialAddressOfSuspect:
          type: string
        lgaOfSuspect:
          type: string
        stateOfSuspect:
          type: string
        countryOfSuspect:
          type: string
        suspectOrganizationType:
          type: string
          enum:
            [
              "Government",
              "NGO",
              "Private",
              "Self Employed",
              "Others",
              "Unknown",
            ]
        suspectOrganizationName:
          type: string
        otherDetailsOfSuspect:
          type: string
        addedBy:
          type: string
          format: uuid
        disabilityStatus:
          type: string
        addressLandmark:
          type: string
        religion:
          type: string
        relationshipWithVictim:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseTaggedCategories:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseTagID:
          type: string
          format: uuid
        caseID:
          $ref: "#/components/schemas/Case"
        caseCategoryID:
          $ref: "#/components/schemas/CaseCategory"
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseVictim:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseVictimID:
          type: string
        caseID:
          $ref: "#/components/schemas/Case"
        firstNameOfVictim:
          type: string
        lastNameOfVictim:
          type: string
        middleNameOfVictim:
          type: string
        emailOfVictim:
          type: string
        phoneNumberOfVictim:
          type: string
        victimAgegroup:
          type: string
        genderOfVictim:
          type: string
          enum: ["Male", "Female"]
        residentialAddressOfVictim:
          type: string
        addressLandmark:
          type: string
        lgaOfVictim:
          type: string
        stateOfVictim:
          type: string
        countryOfVictim:
          type: string
        victimOccupation:
          type: string
        victimOrganizationType:
          type: string
          enum:
            [
              "Government",
              "NGO",
              "Private",
              "Self Employed",
              "Others",
              "Unknown",
            ]
        victimOrganizationID:
          $ref: "#/components/schemas/Organization"
        victimOrganizationName:
          type: string
        otherDetailsOfVictim:
          type: string
        addedBy:
          type: string
        disabilityStatus:
          type: string
        religion:
          type: string
        relationshipWithVictim:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    CaseWitness:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        caseWitnessID:
          type: string
        caseID:
          $ref: "#/components/schemas/Case"
        firstNameOfWitness:
          type: string
        lastNameOfWitness:
          type: string
        middleNameOfWitness:
          type: string
        emailOfWitness:
          type: string
          uniqueItems: true
        phoneNumberOfWitness:
          type: string
        witnessAgegroup:
          type: string
        genderOfWitness:
          type: string
          enum: ["Male", "Female"]
        residentialAddressOfWitness:
          type: string
        addressLandmark:
          type: string
        lgaOfWitness:
          type: string
        stateOfWitness:
          type: string
        countryOfWitness:
          type: string
        witnessOccupation:
          type: string
        witnessOrganizationType:
          type: string
          enum:
            [
              "Government",
              "NGO",
              "Private",
              "Self Employed",
              "Others",
              "Unknown",
            ]
        witnessOrganizationID:
          $ref: "#/components/schemas/Organization"
        witnessOrganizationName:
          type: string
        otherDetailsOfWitness:
          type: string
        addedBy:
          type: string
        disabilityStatus:
          type: string
        religion:
          type: string
        relationshipWithVictim:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    FollowCase:
      additionalProperties: false
      type: object
      properties:
        _id:
          type: string
          format: uuid
        followCaseID:
          type: string
          format: uuid
        caseID:
          $ref: "#/components/schemas/Case"
        publicUserId:
          $ref: "#/components/schemas/PublicUser"
        followStatus:
          type: string
          enum: ["following", "notFollowing"]
          default: "notFollowing"
    Organization:
      additionalProperties: false
      type: object
      required: [orgName, emails, address, addressLandmark, phones]
      properties:
        _id:
          type: string
          format: uuid
          readOnly: true
        orgID:
          type: string
          format: uuid
          readOnly: true
        orgName:
          type: string
        orgType:
          type: string
          enum: ["Government", "NGO", "Private", "Others"]
        description:
          type: string
        emails:
          type: array
          items:
            type: string
            format: email;
        address:
          type: string
        addressLandmark:
          type: string
        phones:
          type: array
          items:
            type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        cacRegNo:
          type: string
        orgStatus:
          type: string
        addedBy:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    PartnerBranch:
      type: object
      required: ["branchName", "address"]
      properties:
        _id:
          type: string
          readOnly: true
        partnerID:
          $ref: "#/components/schemas/Organization"
          readOnly: true
        branchName:
          type: string
        address:
          type: string
        ward:
          type: string
        lga:
          type: string
        state:
          type: string
        country:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
    Contact:
      type: object
      required: ["email", "subject", "message"]
      properties:
        ticketID:
          type: string
          format: uuid
          readOnly: true
        senderName:
          type: string
        userID:
          readOnly: true
          $ref: "#/components/schemas/PublicUser"
        phoneNumber:
          type: string
        email:
          type: string
          format: email
        subject:
          type: string
        message:
          type: string
        status:
          type: string
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
